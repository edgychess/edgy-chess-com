{"version":3,"sources":["jocly.util.js","jocly.uct.js","jocly.game.js"],"names":[],"mappingsttfile":"jocly.game.js","sourcesContent":["/*    Copyright 2017 Jocly\r\n *\r\n *    This program is free software: you can redistribute it and/or  modify\r\n *    it under the terms of the GNU Affero General Public License, version 3,\r\n *    as published by the Free Software Foundation.\r\n *\r\n *    This program is distributed in the hope that it will be useful,\r\n *    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n *    GNU Affero General Public License for more details.\r\n *\r\n *    You should have received a copy of the GNU Affero General Public License\r\n *    along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n *\r\n *    As a special exception, the copyright holders give permission to link the\r\n *    code of portions of this program with the OpenSSL library under certain\r\n *    conditions as described in each individual source file and distribute\r\n *    linked combinations including the program with the OpenSSL library. You\r\n *    must comply with the GNU Affero General Public License in all respects\r\n *    for all of the code used other than as permitted herein. If you modify\r\n *    file(s) with this exception, you may extend this exception to your\r\n *    version of the file(s), but you are not obligated to do so. If you do not\r\n *    wish to do so, delete this exception statement from your version. If you\r\n *    delete this exception statement from all source files in the program,\r\n *    then also delete it in the license file.\r\n */\r\n\r\nfunction JocLog() {\r\n\tif(typeof jQuery!=\"undefined\") {\r\n\t\tvar strs=[];\r\n\t\tfor(var i=0;i<arguments.length;i++) {\r\n\t\t\tvar str=arguments[i];\r\n\t\t\tif(typeof(str)!=\"string\")\r\n\t\t\t\tstr=JSON.stringify(str);\r\n\t\t\tstrs.push(\"\"+str);\r\n\t\t}\r\n\t\tjQuery(\"<p/>\").text(strs.join(\" \")).appendTo(jQuery(\"#jocly-log\"));\r\n\t} else\r\n\t\tconsole.warn.apply(console,arguments);\r\n}\r\n\r\nvar JocUtil = {\r\n\tJSON: JSON\r\n}\r\n\r\nJocUtil.reload = function() {\r\n\twindow.location.reload();\r\n}\r\n\r\nJocUtil.setTimeout=function(fnt,timeout) {\r\n\treturn setTimeout(fnt,timeout);\r\n}\r\n\r\nJocUtil.setInterval=function(fnt,timeout) {\r\n\treturn setInterval(fnt,timeout);\r\n}\r\n\r\nJocUtil.clearTimeout=function(timer) {\r\n\tclearTimeout(timer);\r\n}\r\n\r\nJocUtil.schedule=function(target,method,args) {\r\n\tJocUtil.setTimeout(function() { target[method](args); }, 0);\r\n}\r\n\r\nJocUtil.setPref=function(aPrefName,aValue,options) {\r\n\tvar prefName='jocly_pref';\r\n\tif(arguments.length<3)\r\n\t\toptions={}\r\n\tif(options.appId)\r\n\t\tprefName+=\"_\"+options.appId;\r\n\tif(options.game)\r\n\t\tprefName+=\"_\"+options.game;\r\n\tprefName+=\"_\"+aPrefName;\r\n\tif(typeof(aValue)==\"boolean\")\r\n\t\taValue=\"$#@\"+aValue;\r\n\tif(typeof(aValue)==\"object\" || typeof(aValue)==\"array\")\r\n\t\taValue=\"$#@JSON@\"+JSON.stringify(aValue);\r\n\t//alert(\"setPref(\"+prefName+\",\"+aValue+\") \"+typeof(aValue));\r\n\twindow.localStorage.setItem(prefName,aValue);\r\n}\r\n\r\nJocUtil.getPref=function(aPrefName,options) {\r\n\tvar prefName='jocly_pref';\r\n\tif(arguments.length<2)\r\n\t\toptions={}\r\n\tif(options.appId)\r\n\t\tprefName+=\"_\"+options.appId;\r\n\tif(options.game)\r\n\t\tprefName+=\"_\"+options.game;\r\n\tprefName+=\"_\"+aPrefName;\r\n\tvar value=window.localStorage.getItem(prefName);\r\n\tif(value==\"$#@true\")\r\n\t\tvalue=true;\r\n\telse if(value==\"$#@false\")\r\n\t\tvalue=false;\r\n\telse if(typeof(value)==\"string\" && value.substr(0,8)==\"$#@JSON@\")\r\n\t\tvalue=JSON.parse(value.substr(8));\r\n\tif(value==null && typeof options.defaultValue!=\"undefined\")\r\n\t\tvalue=options.defaultValue;\r\n\t//alert(\"getPref(\"+prefName+\") => \"+value+\" \"+typeof(value));\r\n\treturn value;\r\n}\r\n\r\nJocUtil.filterLevels=function(levels,maxLevel,defaultLevel) {\r\n\tfunction Calibrate() {\r\n\t\tvar timer0=new Date().getTime();\r\n\t\tvar n=1000;\r\n\t\tvar m=100;\r\n\t\tvar a=[];\r\n\t\tvar b=[];\r\n\t\tfor(var i=0;i<m;i++) {\r\n\t\t\ta.push(i);\r\n\t\t}\r\n\t\tfor(var i=0;i<n;i++) {\r\n\t\t\twhile(a.length>0)\r\n\t\t\t\tb.push(a.shift());\r\n\t\t\tvar c=a;\r\n\t\t\ta=b;\r\n\t\t\tb=c;\r\n\t\t}\r\n\t\tvar timer1=new Date().getTime();\r\n\t\treturn timer1-timer0;\r\n\t}\r\n\tvar calibration=parseInt(JocUtil.getPref(\"calibration\",{defaultValue:0}));\r\n\tvar calibrationDate=parseInt(JocUtil.getPref(\"calibrationDate\",{defaultValue:0}));\r\n\tif(calibrationDate<new Date().getTime()-24*60*60*1000)\r\n\t\tcalibration=0;\r\n\tvar maxTime=60000;\r\n\tvar bestDefaultMaxTime=3000;\r\n\tvar levels0=[];\r\n\tif(levels) {\r\n\t\tvar bestLevel=null;\r\n\t\tvar bestLevelTime=0;\r\n\t\tvar bestLevelForced=false;\r\n\t\tfor(var k in levels) {\r\n\t\t\tvar level=levels[k];\r\n\t\t\tif(level.isDefault) {\r\n\t\t\t\tbestLevel=level;\r\n\t\t\t\tbestLevelFound=true;\r\n\t\t\t}\r\n\t\t\tlevel.isDefault=false;\r\n\t\t\tlevel.fullLabel=strings[\"comp-level\"]+\" \"+level.label;\r\n\t\t\tlevel.optionValue=k;\r\n\t\t\tif(level.calRatio) {\r\n\t\t\t\tif(!calibration) {\r\n\t\t\t\t\tcalibration=Calibrate();\r\n\t\t\t\t\tJocLog(\"Calibration\",calibration);\r\n\t\t\t\t\tJocUtil.setPref(\"calibration\",calibration,{});\r\n\t\t\t\t\tJocUtil.setPref(\"calibrationDate\",new Date().getTime(),{});\r\n\t\t\t\t}\r\n\t\t\t\tvar levelTime=calibration*level.calRatio;\r\n\t\t\t\tif(levelTime>maxTime && levels0.length>=2)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif(bestLevelForced==false) {\r\n\t\t\t\t\tif(bestLevel==null || (levelTime<bestDefaultMaxTime && levelTime>bestLevelTime)) {\r\n\t\t\t\t\t\tbestLevel=level;\r\n\t\t\t\t\t\tbestLevelTime=levelTime;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if(bestLevel==null)\r\n\t\t\t\tbestLevel=level;\r\n\t\t\tlevels0.push(level);\r\n\t\t}\r\n\t\tif(bestLevel)\r\n\t\t\tbestLevel.isDefault=true;\r\n\t} else {\r\n\t\tvar maxLevel0=9;\r\n\t\tif(maxLevel)\r\n\t\t\tmaxLevel0=maxLevel;\r\n\t\tfor(var i=0;i<=maxLevel0;i++) {\r\n\t\t\tvar level={\r\n\t\t\t\tfullLabel: strings[\"comp-level\"]+\" \"+(i+1),\r\n\t\t\t\toptionValue: \"machine-\"+i,\r\n\t\t\t\tisDefault: false\r\n\t\t\t};\r\n\t\t\tif(typeof(defaultLevel)!=\"undefined\" && i==defaultLevel)\r\n\t\t\t\tlevel.isDefault=true;\r\n\t\t\tlevels0.push(level);\r\n\t\t}\r\n\t}\r\n\treturn levels0;\r\n}\r\n\r\nJocUtil.cookieSupportTested=false;\r\nJocUtil.cookieSupport=true;\r\nJocUtil.hasCookieSupport=function() {\r\n\tif(JocUtil.cookieSupportTested)\r\n\t\treturn JocUtil.cookieSupport;\r\n\tif(document.cookie.length==0) {\r\n\t\tvar date=new Date();\r\n\t\tdate.setTime(date.getTime()+365*24*60*60*1000);\r\n\t\tdocument.cookie=\"jocly=\"+escape(\"{}\")+\"; path=/; expires=\"+date.toGMTString()+\";\";\r\n\t\tif(document.cookie.length==0)\r\n\t\t\tJocUtil.cookieSupport=false;\r\n\t}\r\n\tJocUtil.cookieSupportTested=true;\r\n\treturn JocUtil.cookieSupport;\r\n}\r\n\r\nJocUtil.getCookieData=function() {\r\n\tif(JocUtil.hasCookieSupport()) {\r\n\t\tvar cookies=document.cookie.split(\";\");\r\n\t\tfor(var i in cookies) {\r\n\t\t\tvar c=/^ *(.*)$/.exec(cookies[i])[1];\r\n\t\t\tif(c.indexOf(\"jocly=\")==0) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\treturn JSON.parse(unescape(c.substring(6)));\r\n\t\t\t\t} catch(e) {\r\n\t\t\t\t\tJocLog(\"Unable to parse cookie\",c);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {};\r\n\t} else {\r\n\t\tvar value=window.localStorage.getItem(\"jocly\");\r\n\t\tif(value==null)\r\n\t\t\treturn {};\r\n\t\telse\r\n\t\t\treturn JSON.parse(value);\r\n\t}\r\n}\r\n\r\nJocUtil.setCookieData=function(name,value) {\r\n\tif(JocUtil.hasCookieSupport()) {\r\n\t\tvar jocly=JocUtil.getCookieData();\r\n\t\tif(value==null)\r\n\t\t\tdelete jocly[name];\r\n\t\telse\r\n\t\t\tjocly[name]=value;\r\n\t\tvar date=new Date();\r\n\t\tdate.setTime(date.getTime()+365*24*60*60*1000);\r\n\t\tvar cookie=\"jocly=\"+escape(JSON.stringify(jocly))+\"; path=/; expires=\"+date.toGMTString()+\";\";\r\n\t\tdocument.cookie=cookie;\r\n\t} else {\r\n\t\tvar jocly=window.localStorage.getItem(\"jocly\");\r\n\t\tif(jocly==null)\r\n\t\t\tjocly={};\r\n\t\telse\r\n\t\t\tjocly=JSON.parse(jocly);\r\n\t\tjocly[name]=value;\r\n\t\twindow.localStorage.setItem(\"jocly\",JSON.stringify(jocly));\r\n\t}\r\n}\r\n\r\nJocUtil.extend=function(target,obj) {\r\n\tfor(var i in obj)\r\n\t\ttarget[i]=obj[i];\r\n}\r\n\r\nJocUtil.md5=function(string) {\r\n\tfunction RotateLeft(lValue, iShiftBits) {\r\n\t\treturn (lValue<<iShiftBits) | (lValue>>>(32-iShiftBits));\r\n\t}\r\n\tfunction AddUnsigned(lX,lY) {\r\n\t\tvar lX4,lY4,lX8,lY8,lResult;\r\n\t\tlX8 = (lX & 0x80000000);\r\n\t\tlY8 = (lY & 0x80000000);\r\n\t\tlX4 = (lX & 0x40000000);\r\n\t\tlY4 = (lY & 0x40000000);\r\n\t\tlResult = (lX & 0x3FFFFFFF)+(lY & 0x3FFFFFFF);\r\n\t\tif (lX4 & lY4) {\r\n\t\t\treturn (lResult ^ 0x80000000 ^ lX8 ^ lY8);\r\n\t\t}\r\n\t\tif (lX4 | lY4) {\r\n\t\t\tif (lResult & 0x40000000) {\r\n\t\t\t\treturn (lResult ^ 0xC0000000 ^ lX8 ^ lY8);\r\n\t\t\t} else {\r\n\t\t\t\treturn (lResult ^ 0x40000000 ^ lX8 ^ lY8);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn (lResult ^ lX8 ^ lY8);\r\n\t\t}\r\n \t}\r\n \tfunction F(x,y,z) { return (x & y) | ((~x) & z); }\r\n \tfunction G(x,y,z) { return (x & z) | (y & (~z)); }\r\n \tfunction H(x,y,z) { return (x ^ y ^ z); }\r\n\tfunction I(x,y,z) { return (y ^ (x | (~z))); }\r\n\tfunction FF(a,b,c,d,x,s,ac) {\r\n\t\ta = AddUnsigned(a, AddUnsigned(AddUnsigned(F(b, c, d), x), ac));\r\n\t\treturn AddUnsigned(RotateLeft(a, s), b);\r\n\t};\r\n\tfunction GG(a,b,c,d,x,s,ac) {\r\n\t\ta = AddUnsigned(a, AddUnsigned(AddUnsigned(G(b, c, d), x), ac));\r\n\t\treturn AddUnsigned(RotateLeft(a, s), b);\r\n\t};\r\n\tfunction HH(a,b,c,d,x,s,ac) {\r\n\t\ta = AddUnsigned(a, AddUnsigned(AddUnsigned(H(b, c, d), x), ac));\r\n\t\treturn AddUnsigned(RotateLeft(a, s), b);\r\n\t};\r\n\tfunction II(a,b,c,d,x,s,ac) {\r\n\t\ta = AddUnsigned(a, AddUnsigned(AddUnsigned(I(b, c, d), x), ac));\r\n\t\treturn AddUnsigned(RotateLeft(a, s), b);\r\n\t};\r\n\tfunction ConvertToWordArray(string) {\r\n\t\tvar lWordCount;\r\n\t\tvar lMessageLength = string.length;\r\n\t\tvar lNumberOfWords_temp1=lMessageLength + 8;\r\n\t\tvar lNumberOfWords_temp2=(lNumberOfWords_temp1-(lNumberOfWords_temp1 % 64))/64;\r\n\t\tvar lNumberOfWords = (lNumberOfWords_temp2+1)*16;\r\n\t\tvar lWordArray=Array(lNumberOfWords-1);\r\n\t\tvar lBytePosition = 0;\r\n\t\tvar lByteCount = 0;\r\n\t\twhile ( lByteCount < lMessageLength ) {\r\n\t\t\tlWordCount = (lByteCount-(lByteCount % 4))/4;\r\n\t\t\tlBytePosition = (lByteCount % 4)*8;\r\n\t\t\tlWordArray[lWordCount] = (lWordArray[lWordCount] | (string.charCodeAt(lByteCount)<<lBytePosition));\r\n\t\t\tlByteCount++;\r\n\t\t}\r\n\t\tlWordCount = (lByteCount-(lByteCount % 4))/4;\r\n\t\tlBytePosition = (lByteCount % 4)*8;\r\n\t\tlWordArray[lWordCount] = lWordArray[lWordCount] | (0x80<<lBytePosition);\r\n\t\tlWordArray[lNumberOfWords-2] = lMessageLength<<3;\r\n\t\tlWordArray[lNumberOfWords-1] = lMessageLength>>>29;\r\n\t\treturn lWordArray;\r\n\t};\r\n\tfunction WordToHex(lValue) {\r\n\t\tvar WordToHexValue=\"\",WordToHexValue_temp=\"\",lByte,lCount;\r\n\t\tfor (lCount = 0;lCount<=3;lCount++) {\r\n\t\t\tlByte = (lValue>>>(lCount*8)) & 255;\r\n\t\t\tWordToHexValue_temp = \"0\" + lByte.toString(16);\r\n\t\t\tWordToHexValue = WordToHexValue + WordToHexValue_temp.substr(WordToHexValue_temp.length-2,2);\r\n\t\t}\r\n\t\treturn WordToHexValue;\r\n\t};\r\n\tfunction Utf8Encode(string) {\r\n\t\tstring = string.replace(/\\r\\n/g,\"\\n\");\r\n\t\tvar utftext = \"\";\r\n\t\tfor (var n = 0; n < string.length; n++) {\r\n\t\t\tvar c = string.charCodeAt(n);\r\n\t\t\tif (c < 128) {\r\n\t\t\t\tutftext += String.fromCharCode(c);\r\n\t\t\t}\r\n\t\t\telse if((c > 127) && (c < 2048)) {\r\n\t\t\t\tutftext += String.fromCharCode((c >> 6) | 192);\r\n\t\t\t\tutftext += String.fromCharCode((c & 63) | 128);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tutftext += String.fromCharCode((c >> 12) | 224);\r\n\t\t\t\tutftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n\t\t\t\tutftext += String.fromCharCode((c & 63) | 128);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn utftext;\r\n\t};\r\n\tvar x=Array();\r\n\tvar k,AA,BB,CC,DD,a,b,c,d;\r\n\tvar S11=7, S12=12, S13=17, S14=22;\r\n\tvar S21=5, S22=9 , S23=14, S24=20;\r\n\tvar S31=4, S32=11, S33=16, S34=23;\r\n\tvar S41=6, S42=10, S43=15, S44=21;\r\n\tstring = Utf8Encode(string);\r\n\tx = ConvertToWordArray(string);\r\n\ta = 0x67452301; b = 0xEFCDAB89; c = 0x98BADCFE; d = 0x10325476;\r\n\tfor (k=0;k<x.length;k+=16) {\r\n\t\tAA=a; BB=b; CC=c; DD=d;\r\n\t\ta=FF(a,b,c,d,x[k+0], S11,0xD76AA478);\r\n\t\td=FF(d,a,b,c,x[k+1], S12,0xE8C7B756);\r\n\t\tc=FF(c,d,a,b,x[k+2], S13,0x242070DB);\r\n\t\tb=FF(b,c,d,a,x[k+3], S14,0xC1BDCEEE);\r\n\t\ta=FF(a,b,c,d,x[k+4], S11,0xF57C0FAF);\r\n\t\td=FF(d,a,b,c,x[k+5], S12,0x4787C62A);\r\n\t\tc=FF(c,d,a,b,x[k+6], S13,0xA8304613);\r\n\t\tb=FF(b,c,d,a,x[k+7], S14,0xFD469501);\r\n\t\ta=FF(a,b,c,d,x[k+8], S11,0x698098D8);\r\n\t\td=FF(d,a,b,c,x[k+9], S12,0x8B44F7AF);\r\n\t\tc=FF(c,d,a,b,x[k+10],S13,0xFFFF5BB1);\r\n\t\tb=FF(b,c,d,a,x[k+11],S14,0x895CD7BE);\r\n\t\ta=FF(a,b,c,d,x[k+12],S11,0x6B901122);\r\n\t\td=FF(d,a,b,c,x[k+13],S12,0xFD987193);\r\n\t\tc=FF(c,d,a,b,x[k+14],S13,0xA679438E);\r\n\t\tb=FF(b,c,d,a,x[k+15],S14,0x49B40821);\r\n\t\ta=GG(a,b,c,d,x[k+1], S21,0xF61E2562);\r\n\t\td=GG(d,a,b,c,x[k+6], S22,0xC040B340);\r\n\t\tc=GG(c,d,a,b,x[k+11],S23,0x265E5A51);\r\n\t\tb=GG(b,c,d,a,x[k+0], S24,0xE9B6C7AA);\r\n\t\ta=GG(a,b,c,d,x[k+5], S21,0xD62F105D);\r\n\t\td=GG(d,a,b,c,x[k+10],S22,0x2441453);\r\n\t\tc=GG(c,d,a,b,x[k+15],S23,0xD8A1E681);\r\n\t\tb=GG(b,c,d,a,x[k+4], S24,0xE7D3FBC8);\r\n\t\ta=GG(a,b,c,d,x[k+9], S21,0x21E1CDE6);\r\n\t\td=GG(d,a,b,c,x[k+14],S22,0xC33707D6);\r\n\t\tc=GG(c,d,a,b,x[k+3], S23,0xF4D50D87);\r\n\t\tb=GG(b,c,d,a,x[k+8], S24,0x455A14ED);\r\n\t\ta=GG(a,b,c,d,x[k+13],S21,0xA9E3E905);\r\n\t\td=GG(d,a,b,c,x[k+2], S22,0xFCEFA3F8);\r\n\t\tc=GG(c,d,a,b,x[k+7], S23,0x676F02D9);\r\n\t\tb=GG(b,c,d,a,x[k+12],S24,0x8D2A4C8A);\r\n\t\ta=HH(a,b,c,d,x[k+5], S31,0xFFFA3942);\r\n\t\td=HH(d,a,b,c,x[k+8], S32,0x8771F681);\r\n\t\tc=HH(c,d,a,b,x[k+11],S33,0x6D9D6122);\r\n\t\tb=HH(b,c,d,a,x[k+14],S34,0xFDE5380C);\r\n\t\ta=HH(a,b,c,d,x[k+1], S31,0xA4BEEA44);\r\n\t\td=HH(d,a,b,c,x[k+4], S32,0x4BDECFA9);\r\n\t\tc=HH(c,d,a,b,x[k+7], S33,0xF6BB4B60);\r\n\t\tb=HH(b,c,d,a,x[k+10],S34,0xBEBFBC70);\r\n\t\ta=HH(a,b,c,d,x[k+13],S31,0x289B7EC6);\r\n\t\td=HH(d,a,b,c,x[k+0], S32,0xEAA127FA);\r\n\t\tc=HH(c,d,a,b,x[k+3], S33,0xD4EF3085);\r\n\t\tb=HH(b,c,d,a,x[k+6], S34,0x4881D05);\r\n\t\ta=HH(a,b,c,d,x[k+9], S31,0xD9D4D039);\r\n\t\td=HH(d,a,b,c,x[k+12],S32,0xE6DB99E5);\r\n\t\tc=HH(c,d,a,b,x[k+15],S33,0x1FA27CF8);\r\n\t\tb=HH(b,c,d,a,x[k+2], S34,0xC4AC5665);\r\n\t\ta=II(a,b,c,d,x[k+0], S41,0xF4292244);\r\n\t\td=II(d,a,b,c,x[k+7], S42,0x432AFF97);\r\n\t\tc=II(c,d,a,b,x[k+14],S43,0xAB9423A7);\r\n\t\tb=II(b,c,d,a,x[k+5], S44,0xFC93A039);\r\n\t\ta=II(a,b,c,d,x[k+12],S41,0x655B59C3);\r\n\t\td=II(d,a,b,c,x[k+3], S42,0x8F0CCC92);\r\n\t\tc=II(c,d,a,b,x[k+10],S43,0xFFEFF47D);\r\n\t\tb=II(b,c,d,a,x[k+1], S44,0x85845DD1);\r\n\t\ta=II(a,b,c,d,x[k+8], S41,0x6FA87E4F);\r\n\t\td=II(d,a,b,c,x[k+15],S42,0xFE2CE6E0);\r\n\t\tc=II(c,d,a,b,x[k+6], S43,0xA3014314);\r\n\t\tb=II(b,c,d,a,x[k+13],S44,0x4E0811A1);\r\n\t\ta=II(a,b,c,d,x[k+4], S41,0xF7537E82);\r\n\t\td=II(d,a,b,c,x[k+11],S42,0xBD3AF235);\r\n\t\tc=II(c,d,a,b,x[k+2], S43,0x2AD7D2BB);\r\n\t\tb=II(b,c,d,a,x[k+9], S44,0xEB86D391);\r\n\t\ta=AddUnsigned(a,AA);\r\n\t\tb=AddUnsigned(b,BB);\r\n\t\tc=AddUnsigned(c,CC);\r\n\t\td=AddUnsigned(d,DD);\r\n\t}\r\n\tvar temp = WordToHex(a)+WordToHex(b)+WordToHex(c)+WordToHex(d);\r\n\treturn temp.toLowerCase();\r\n}\r\n\r\nJocUtil.sha1=function(msg) {\r\n\tfunction rotate_left(n,s) {\r\n\t\tvar t4 = ( n<<s ) | (n>>>(32-s));\r\n\t\treturn t4;\r\n\t};\r\n\tfunction lsb_hex(val) {\r\n\t\tvar str=\"\";\r\n\t\tvar i;\r\n\t\tvar vh;\r\n\t\tvar vl;\r\n\t\tfor( i=0; i<=6; i+=2 ) {\r\n\t\t\tvh = (val>>>(i*4+4))&0x0f;\r\n\t\t\tvl = (val>>>(i*4))&0x0f;\r\n\t\t\tstr += vh.toString(16) + vl.toString(16);\r\n\t\t}\r\n\t\treturn str;\r\n\t};\r\n\tfunction cvt_hex(val) {\r\n\t\tvar str=\"\";\r\n\t\tvar i;\r\n\t\tvar v;\r\n\t\tfor( i=7; i>=0; i-- ) {\r\n\t\t\tv = (val>>>(i*4))&0x0f;\r\n\t\t\tstr += v.toString(16);\r\n\t\t}\r\n\t\treturn str;\r\n\t};\r\n\tfunction Utf8Encode(string) {\r\n\t\tstring = string.replace(/\\r\\n/g,\"\\n\");\r\n\t\tvar utftext = \"\";\r\n\t\tfor (var n = 0; n < string.length; n++) {\r\n\t\t\tvar c = string.charCodeAt(n);\r\n\t\t\tif (c < 128) {\r\n\t\t\t\tutftext += String.fromCharCode(c);\r\n\t\t\t}\r\n\t\t\telse if((c > 127) && (c < 2048)) {\r\n\t\t\t\tutftext += String.fromCharCode((c >> 6) | 192);\r\n\t\t\t\tutftext += String.fromCharCode((c & 63) | 128);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tutftext += String.fromCharCode((c >> 12) | 224);\r\n\t\t\t\tutftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n\t\t\t\tutftext += String.fromCharCode((c & 63) | 128);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn utftext;\r\n\t};\r\n\tvar blockstart;\r\n\tvar i, j;\r\n\tvar W = new Array(80);\r\n\tvar H0 = 0x67452301;\r\n\tvar H1 = 0xEFCDAB89;\r\n\tvar H2 = 0x98BADCFE;\r\n\tvar H3 = 0x10325476;\r\n\tvar H4 = 0xC3D2E1F0;\r\n\tvar A, B, C, D, E;\r\n\tvar temp;\r\n\tmsg = Utf8Encode(msg);\r\n\tvar msg_len = msg.length;\r\n\tvar word_array = new Array();\r\n\tfor( i=0; i<msg_len-3; i+=4 ) {\r\n\t\tj = msg.charCodeAt(i)<<24 | msg.charCodeAt(i+1)<<16 |\r\n\t\tmsg.charCodeAt(i+2)<<8 | msg.charCodeAt(i+3);\r\n\t\tword_array.push( j );\r\n\t}\r\n\tswitch( msg_len % 4 ) {\r\n\t\tcase 0:\r\n\t\t\ti = 0x080000000;\r\n\t\tbreak;\r\n\t\tcase 1:\r\n\t\t\ti = msg.charCodeAt(msg_len-1)<<24 | 0x0800000;\r\n\t\tbreak;\r\n\r\n\t\tcase 2:\r\n\t\t\ti = msg.charCodeAt(msg_len-2)<<24 | msg.charCodeAt(msg_len-1)<<16 | 0x08000;\r\n\t\tbreak;\r\n\r\n\t\tcase 3:\r\n\t\t\ti = msg.charCodeAt(msg_len-3)<<24 | msg.charCodeAt(msg_len-2)<<16 | msg.charCodeAt(msg_len-1)<<8\t| 0x80;\r\n\t\tbreak;\r\n\t}\r\n\tword_array.push( i );\r\n\twhile( (word_array.length % 16) != 14 ) word_array.push( 0 );\r\n\tword_array.push( msg_len>>>29 );\r\n\tword_array.push( (msg_len<<3)&0x0ffffffff );\r\n\tfor ( blockstart=0; blockstart<word_array.length; blockstart+=16 ) {\r\n\t\tfor( i=0; i<16; i++ ) W[i] = word_array[blockstart+i];\r\n\t\tfor( i=16; i<=79; i++ ) W[i] = rotate_left(W[i-3] ^ W[i-8] ^ W[i-14] ^ W[i-16], 1);\r\n\t\tA = H0;\r\n\t\tB = H1;\r\n\t\tC = H2;\r\n\t\tD = H3;\r\n\t\tE = H4;\r\n\t\tfor( i= 0; i<=19; i++ ) {\r\n\t\t\ttemp = (rotate_left(A,5) + ((B&C) | (~B&D)) + E + W[i] + 0x5A827999) & 0x0ffffffff;\r\n\t\t\tE = D;\r\n\t\t\tD = C;\r\n\t\t\tC = rotate_left(B,30);\r\n\t\t\tB = A;\r\n\t\t\tA = temp;\r\n\t\t}\r\n\t\tfor( i=20; i<=39; i++ ) {\r\n\t\t\ttemp = (rotate_left(A,5) + (B ^ C ^ D) + E + W[i] + 0x6ED9EBA1) & 0x0ffffffff;\r\n\t\t\tE = D;\r\n\t\t\tD = C;\r\n\t\t\tC = rotate_left(B,30);\r\n\t\t\tB = A;\r\n\t\t\tA = temp;\r\n\t\t}\r\n\t\tfor( i=40; i<=59; i++ ) {\r\n\t\t\ttemp = (rotate_left(A,5) + ((B&C) | (B&D) | (C&D)) + E + W[i] + 0x8F1BBCDC) & 0x0ffffffff;\r\n\t\t\tE = D;\r\n\t\t\tD = C;\r\n\t\t\tC = rotate_left(B,30);\r\n\t\t\tB = A;\r\n\t\t\tA = temp;\r\n\t\t}\r\n\t\tfor( i=60; i<=79; i++ ) {\r\n\t\t\ttemp = (rotate_left(A,5) + (B ^ C ^ D) + E + W[i] + 0xCA62C1D6) & 0x0ffffffff;\r\n\t\t\tE = D;\r\n\t\t\tD = C;\r\n\t\t\tC = rotate_left(B,30);\r\n\t\t\tB = A;\r\n\t\t\tA = temp;\r\n\t\t}\r\n\t\tH0 = (H0 + A) & 0x0ffffffff;\r\n\t\tH1 = (H1 + B) & 0x0ffffffff;\r\n\t\tH2 = (H2 + C) & 0x0ffffffff;\r\n\t\tH3 = (H3 + D) & 0x0ffffffff;\r\n\t\tH4 = (H4 + E) & 0x0ffffffff;\r\n\t}\r\n\tvar temp = cvt_hex(H0) + cvt_hex(H1) + cvt_hex(H2) + cvt_hex(H3) + cvt_hex(H4);\r\n\treturn temp.toLowerCase();\r\n}\r\n\r\n/*\r\nA C-program for MT19937, with initialization improved 2002/1/26.\r\nCoded by Takuji Nishimura and Makoto Matsumoto.\r\nBefore using, initialize the state by using init_genrand(seed)\r\nor init_by_array(init_key, key_length).\r\nCopyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,\r\nAll rights reserved.\r\nRedistribution and use in source and binary forms, with or without\r\nmodification, are permitted provided that the following conditions\r\nare met:\r\n1. Redistributions of source code must retain the above copyright\r\nnotice, this list of conditions and the following disclaimer.\r\n2. Redistributions in binary form must reproduce the above copyright\r\nnotice, this list of conditions and the following disclaimer in the\r\ndocumentation and/or other materials provided with the distribution.\r\n3. The names of its contributors may not be used to endorse or promote\r\nproducts derived from this software without specific prior written\r\npermission.\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\r\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\r\nPROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\nAny feedback is very welcome.\r\nhttp://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html\r\nemail: m-mat @ math.sci.hiroshima-u.ac.jp (remove space)\r\n*/\r\n\r\nvar MersenneTwister = function(seed) {\r\n\tif (seed == undefined) {\r\n\t\tseed = new Date().getTime();\r\n\t}\r\n\t/* Period parameters */\r\n\tthis.N = 624;\r\n\tthis.M = 397;\r\n\tthis.MATRIX_A = 0x9908b0df; /* constant vector a */\r\n\tthis.UPPER_MASK = 0x80000000; /* most significant w-r bits */\r\n\tthis.LOWER_MASK = 0x7fffffff; /* least significant r bits */\r\n\tthis.mt = new Array(this.N); /* the array for the state vector */\r\n\tthis.mti=this.N+1; /* mti==N+1 means mt[N] is not initialized */\r\n\r\n\tthis.init_genrand(seed);\r\n}\r\n/* initializes mt[N] with a seed */\r\nMersenneTwister.prototype.init_genrand = function(s) {\r\n\tthis.mt[0] = s >>> 0;\r\n\tfor (this.mti=1; this.mti<this.N; this.mti++) {\r\n\t\tvar s = this.mt[this.mti-1] ^ (this.mt[this.mti-1] >>> 30);\r\n\t\tthis.mt[this.mti] = (((((s & 0xffff0000) >>> 16) * 1812433253) << 16) + (s & 0x0000ffff) * 1812433253)\r\n\t\t+ this.mti;\r\n\t\t/* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */\r\n\t\t/* In the previous versions, MSBs of the seed affect */\r\n\t\t/* only MSBs of the array mt[]. */\r\n\t\t/* 2002/01/09 modified by Makoto Matsumoto */\r\n\t\tthis.mt[this.mti] >>>= 0;\r\n\t\t/* for >32 bit machines */\r\n\t}\r\n}\r\n/* initialize by an array with array-length */\r\n/* init_key is the array for initializing keys */\r\n/* key_length is its length */\r\n/* slight change for C++, 2004/2/26 */\r\nMersenneTwister.prototype.init_by_array = function(init_key, key_length) {\r\n\tvar i, j, k;\r\n\tthis.init_genrand(19650218);\r\n\ti=1; j=0;\r\n\tk = (this.N>key_length ? this.N : key_length);\r\n\tfor (; k; k--) {\r\n\t\tvar s = this.mt[i-1] ^ (this.mt[i-1] >>> 30)\r\n\t\tthis.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1664525) << 16) + ((s & 0x0000ffff) * 1664525)))\r\n\t\t+ init_key[j] + j; /* non linear */\r\n\t\tthis.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\r\n\t\ti++; j++;\r\n\t\tif (i>=this.N) { this.mt[0] = this.mt[this.N-1]; i=1; }\r\n\t\tif (j>=key_length) j=0;\r\n\t}\r\n\tfor (k=this.N-1; k; k--) {\r\n\t\tvar s = this.mt[i-1] ^ (this.mt[i-1] >>> 30);\r\n\t\tthis.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1566083941) << 16) + (s & 0x0000ffff) * 1566083941))\r\n\t\t- i; /* non linear */\r\n\t\tthis.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\r\n\t\ti++;\r\n\t\tif (i>=this.N) { this.mt[0] = this.mt[this.N-1]; i=1; }\r\n\t}\r\n\r\n\tthis.mt[0] = 0x80000000; /* MSB is 1; assuring non-zero initial array */\r\n}\r\n/* generates a random number on [0,0xffffffff]-interval */\r\nMersenneTwister.prototype.genrand_int32 = function() {\r\n\tvar y;\r\n\tvar mag01 = new Array(0x0, this.MATRIX_A);\r\n\t/* mag01[x] = x * MATRIX_A for x=0,1 */\r\n\r\n\tif (this.mti >= this.N) { /* generate N words at one time */\r\n\t\tvar kk;\r\n\r\n\t\tif (this.mti == this.N+1) /* if init_genrand() has not been called, */\r\n\t\t\tthis.init_genrand(5489); /* a default initial seed is used */\r\n\r\n\t\tfor (kk=0;kk<this.N-this.M;kk++) {\r\n\t\t\ty = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk+1]&this.LOWER_MASK);\r\n\t\t\tthis.mt[kk] = this.mt[kk+this.M] ^ (y >>> 1) ^ mag01[y & 0x1];\r\n\t\t}\r\n\t\tfor (;kk<this.N-1;kk++) {\r\n\t\t\ty = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk+1]&this.LOWER_MASK);\r\n\t\t\tthis.mt[kk] = this.mt[kk+(this.M-this.N)] ^ (y >>> 1) ^ mag01[y & 0x1];\r\n\t\t}\r\n\t\ty = (this.mt[this.N-1]&this.UPPER_MASK)|(this.mt[0]&this.LOWER_MASK);\r\n\t\tthis.mt[this.N-1] = this.mt[this.M-1] ^ (y >>> 1) ^ mag01[y & 0x1];\r\n\r\n\t\tthis.mti = 0;\r\n\t}\r\n\r\n\ty = this.mt[this.mti++];\r\n\r\n\t/* Tempering */\r\n\ty ^= (y >>> 11);\r\n\ty ^= (y << 7) & 0x9d2c5680;\r\n\ty ^= (y << 15) & 0xefc60000;\r\n\ty ^= (y >>> 18);\r\n\r\n\treturn y >>> 0;\r\n}\r\n/* generates a random number on [0,0x7fffffff]-interval */\r\nMersenneTwister.prototype.genrand_int31 = function() {\r\n\treturn (this.genrand_int32()>>>1);\r\n}\r\n/* generates a random number on [0,1]-real-interval */\r\nMersenneTwister.prototype.genrand_real1 = function() {\r\n\treturn this.genrand_int32()*(1.0/4294967295.0);\r\n\t/* divided by 2^32-1 */\r\n}\r\n\r\n/* generates a random number on [0,1)-real-interval */\r\nMersenneTwister.prototype.random = function() {\r\n\treturn this.genrand_int32()*(1.0/4294967296.0);\r\n\t/* divided by 2^32 */\r\n}\r\n/* generates a random number on (0,1)-real-interval */\r\nMersenneTwister.prototype.genrand_real3 = function() {\r\n\treturn (this.genrand_int32() + 0.5)*(1.0/4294967296.0);\r\n\t/* divided by 2^32 */\r\n}\r\n/* generates a random number on [0,1) with 53-bit resolution*/\r\nMersenneTwister.prototype.genrand_res53 = function() {\r\n\tvar a=this.genrand_int32()>>>5, b=this.genrand_int32()>>>6;\r\n\treturn(a*67108864.0+b)*(1.0/9007199254740992.0);\r\n}\r\n\r\nif (typeof module !== 'undefined' && module.exports) {\r\n\texports.MersenneTwister = MersenneTwister;\r\n\texports.JocUtil = JocUtil;\r\n} else {\r\n\tthis.MersenneTwister = MersenneTwister;\r\n\tthis.JocUtil = JocUtil;\r\n}\r\n","/*    Copyright 2017 Jocly\r\n *\r\n *    This program is free software: you can redistribute it and/or  modify\r\n *    it under the terms of the GNU Affero General Public License, version 3,\r\n *    as published by the Free Software Foundation.\r\n *\r\n *    This program is distributed in the hope that it will be useful,\r\n *    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n *    GNU Affero General Public License for more details.\r\n *\r\n *    You should have received a copy of the GNU Affero General Public License\r\n *    along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n *\r\n *    As a special exception, the copyright holders give permission to link the\r\n *    code of portions of this program with the OpenSSL library under certain\r\n *    conditions as described in each individual source file and distribute\r\n *    linked combinations including the program with the OpenSSL library. You\r\n *    must comply with the GNU Affero General Public License in all respects\r\n *    for all of the code used other than as permitted herein. If you modify\r\n *    file(s) with this exception, you may extend this exception to your\r\n *    version of the file(s), but you are not obligated to do so. If you do not\r\n *    wish to do so, delete this exception statement from your version. If you\r\n *    delete this exception statement from all source files in the program,\r\n *    then also delete it in the license file.\r\n */\r\n\r\nvar JoclyUCT={};\r\n\r\nif(typeof WorkerGlobalScope == 'undefined' && typeof SystemJS == 'undefined') {\r\n\tmodule.exports.JoclyUCT = JoclyUCT;\r\n\t(function() {\r\n\t\tvar r = require;\r\n\t\tvar ju = r(\"./jocly.util.js\");\r\n\t\tglobal.MersenneTwister = ju.MersenneTwister;\r\n\t\tglobal.JocUtil = ju.JocUtil;\r\n\t})();\r\n} else\r\n\tthis.JoclyUCT = JoclyUCT;\r\n\r\n(function() {\r\n\r\n\tfunction Node(parent,who) {\r\n\t\tthis.visits=1;\t\t\t\t\t\t\t// number of time the node has been visited\r\n\t\tthis.children=null;\t\t\t\t\t// node children if any\r\n\t\tthis.who=who;\t\t\t\t\t\t\t// 1 = first player, 2 = second player\r\n\t\tthis.parents=[];\t\t\t\t\t\t// parent nodes\r\n\t\tif(parent)\r\n\t\t\tthis.parents.push(parent);\r\n\t\tthis.known=false;\t\t\t\t\t\t// true if all the node and nodes below have been expanded and all leaves are terminal\r\n\t\tthis.evaluation=0;\t\t\t\t\t\t// the current minimax value\r\n\t\tthis.staticEvalSum=0;\t\t\t\t\t// the sum of the normalized playouts evaluations\r\n\t\tthis.staticEvalCount=0;\t\t\t\t// the number of playouts evaluations\r\n\t\tthis.depth=parent?parent.depth+1:0;\t\t// the node depth\r\n\t}\r\n\r\n\tNode.prototype={\r\n\t\taddParent: function(parent) {\r\n\t\t\tthis.parents.push(parent);\r\n\t\t\tif(parent.depth+1<this.depth)\r\n\t\t\t\tthis.depth=parent.depth+1;\r\n\t\t}\r\n\t}\r\n\r\n\tvar winnerMap={ // convert from Jocly convention (draw==2)\r\n\t\t\"-1\": -1,\r\n\t\t1: 1,\r\n\t\t2: 0,\r\n\t\t0: 0\r\n\t}\r\n\r\n\tJoclyUCT.startMachine = function(aGame,aOptions) {\r\n\t\tvar loopCount=0;\r\n\t\tvar nodeCount=0;\r\n\t\tvar redundantNodeCount=0;\r\n\t\tvar poDur=0,poCount=0;\t// playout stats\r\n\t\tvar skippedAlphaBeta=0; // alpha-beta stats\r\n\t\tvar maxDepth=0;\r\n\r\n\t\tvar uctParams={\r\n\t\t\t\tminVisitsExpand: aOptions.level.minVisitsExpand || 1,\r\n\t\t\t\tplayoutSpread: aOptions.level.playoutSpread || 2,\r\n\t\t\t\tplayoutDepth: (aOptions.level.playoutDepth!==undefined)?aOptions.level.playoutDepth:0,\r\n\t\t\t\tc: (aOptions.level.c!==undefined)?aOptions.level.c:.3,\r\n\t\t\t\tplayoutCeil: (aOptions.level.playoutCeil!==undefined)?aOptions.level.playoutCeil:0,\r\n\t\t\t\tlog: aOptions.level.log?true:false,\r\n\t\t\t\tmaxDuration: (aOptions.level.maxDuration!==undefined)?aOptions.level.maxDuration:2,\r\n\t\t\t\tmaxLoops: (aOptions.level.maxLoops!==undefined)?aOptions.level.maxLoops:0,\r\n\t\t\t\tmaxNodes: (aOptions.level.maxNodes!==undefined)?aOptions.level.maxNodes:0,\r\n\t\t\t\tshowMinimaxTree: aOptions.level.showMinimaxTree?true:false,\r\n\t\t\t\tshowBestLine: aOptions.level.showBestLine?true:false,\r\n\t\t\t\tignoreLeaf: aOptions.level.ignoreLeaf===undefined?false:aOptions.level.ignoreLeaf,\r\n\t\t\t\tpropagateMultiVisits: aOptions.level.propagateMultiVisits===undefined?true:aOptions.level.propagateMultiVisits,\r\n\t\t\t\tpropagation: aOptions.level.propagation===undefined?\"mixed\":aOptions.level.propagation,\r\n\t\t\t\tuseDepthWeights: aOptions.level.useDepthWeights===undefined?false:aOptions.level.useDepthWeights,\r\n\t\t\t\tproductRatio: aOptions.level.productRatio===undefined?0:aOptions.level.productRatio,\r\n\t\t\t\tuseAlphaBeta: aOptions.level.useAlphaBeta===undefined?false:aOptions.level.useAlphaBeta,\r\n\t\t\t\tuncertaintyFactor: aOptions.level.uncertaintyFactor===undefined?0:aOptions.level.uncertaintyFactor,\r\n\t\t\t\tdirectVisits: aOptions.level.directVisits===undefined?true:aOptions.level.directVisits,\r\n\t\t\t\tdistributeEval: aOptions.level.distributeEval===undefined?true:aOptions.level.distributeEval,\r\n\t\t\t\tpickMove: aOptions.level.pickMove===undefined?\"besteval\":aOptions.level.pickMove, // or maxvisits\r\n\t\t\t\tdebugRawEval: aOptions.level.debugRawEval===undefined?false:aOptions.level.debugRawEval,\r\n\t\t};\r\n\t\tvar uctNodes={};\r\n\t\tvar signatures; // the array of visited board signatures\r\n\r\n\t\tif(uctParams.log)\r\n\t\t\tconsole.log(\"Running UCT AI - \",aOptions.level.label,\"- Player\",aGame.mWho==1?\"A\":\"B\");\r\n\r\n\t\t/*\r\n\t\t * Normalize evaluations to get -1<eval<1\r\n\t\t * Handle negative and positive evaluations separately so 0 remains 0\r\n\t\t */\r\n\t\tvar evalMapPositive={\r\n\t\t\tv: 0,\t\t\t\t\t\t// evaluation original value\r\n\t\t\tl: null,\t\t\t\t\t// \"less\" branch (for evaluations < v)\r\n\t\t\tm: {\t\t\t\t\t\t// \"more\" branch (for evaluations > v)\r\n\t\t\t\tv: Number.MAX_VALUE,\r\n\t\t\t\tl: null,\r\n\t\t\t\tm: null,\r\n\t\t\t},\r\n\t\t}\r\n\t\tvar evalMapNegative=JSON.parse(JSON.stringify(evalMapPositive)); // deep copy for the initial negative map\r\n\r\n\t\tfunction NormalizeEval(evaluation) {\r\n\t\t\tvar evalNode=evalMapPositive;\r\n\t\t\tvar negative=false;\r\n\t\t\tvar normEval=0, step=1;\r\n\t\t\tif(evaluation==0)\r\n\t\t\t\treturn 0;\r\n\t\t\tif(evaluation<0) {\r\n\t\t\t\tevaluation=-evaluation;\r\n\t\t\t\tevalNode=evalMapNegative;\r\n\t\t\t\tnegative=true;\r\n\t\t\t}\r\n\t\t\twhile(true) {\r\n\t\t\t\tif(evaluation>evalNode.v) {\r\n\t\t\t\t\tnormEval+=step;\r\n\t\t\t\t\tif(!evalNode.m) {\r\n\t\t\t\t\t\tevalNode.m={\r\n\t\t\t\t\t\t\tv: evaluation,\r\n\t\t\t\t\t\t\tl: null,\r\n\t\t\t\t\t\t\tm: null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tevalNode=evalNode.m;\r\n\t\t\t\t} else if(evaluation<evalNode.v) {\r\n\t\t\t\t\tnormEval-=step;\r\n\t\t\t\t\tif(!evalNode.l) {\r\n\t\t\t\t\t\tevalNode.l={\r\n\t\t\t\t\t\t\tv: evaluation,\r\n\t\t\t\t\t\t\tl: null,\r\n\t\t\t\t\t\t\tm: null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tevalNode=evalNode.l;\r\n\t\t\t\t} else {\t// matching evaluation\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tstep=step/2;\r\n\t\t\t}\r\n\t\t\tif(negative)\r\n\t\t\t\tnormEval=-normEval;\r\n\t\t\treturn normEval;\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t * Best evaluation (minimax)\r\n\t\t */\r\n\t\tfunction GetMinimaxEval(node,children) {\r\n\t\t\tvar evaluation=undefined;\r\n\t\t\tfor(var i=0;i<children.length;i++) {\r\n\t\t\t\tvar node1=children[i];\r\n\t\t\t\tif(evaluation===undefined || node1.evaluation*node1.who>evaluation*node1.who)\r\n\t\t\t\t\tevaluation=node1.evaluation;\r\n\t\t\t}\r\n\t\t\treturn evaluation;\r\n\t\t}\r\n\t\t/*\r\n\t\t * Minus worse opponent evaluation\r\n\t\t */\r\n\t\tfunction GetMaximinEval(node,children) {\r\n\t\t\tvar evaluation=undefined;\r\n\t\t\tfor(var i=0;i<children.length;i++) {\r\n\t\t\t\tvar node1=children[i];\r\n\t\t\t\tif(evaluation===undefined || node1.evaluation*node1.who<evaluation*node1.who)\r\n\t\t\t\t\tevaluation=node1.evaluation;\r\n\t\t\t}\r\n\t\t\treturn -evaluation;\r\n\t\t}\r\n\t\t/*\r\n\t\t * Probability product evaluation\r\n\t\t */\r\n\t\tfunction GetProductEval(node,children) {\r\n\t\t\tvar value=1;\r\n\t\t\tfor(var i=0;i<children.length;i++) {\r\n\t\t\t\tvar node1=children[i];\r\n\t\t\t\tvalue1=(node1.evaluation+1)/2;\r\n\t\t\t\tif(node.who==1)\r\n\t\t\t\t\tvalue*=1-node1.evaluation;\r\n\t\t\t\telse\r\n\t\t\t\t\tvalue*=node1.evaluation;\r\n\t\t\t}\r\n\t\t\tif(node.who==1)\r\n\t\t\t\treturn (1-value)*2-1;\r\n\t\t\telse\r\n\t\t\t\treturn value*2-1;\r\n\t\t}\r\n\r\n\t\tfunction PropagateEvalParent(node,visits,visited) {\r\n\t\t\tif(aGame.mOptions.uctTransposition && !aGame.mOptions.uctIgnoreLoop && (node.sign in visited))\r\n\t\t\t\treturn;\r\n\t\t\tvar children=[];\r\n\t\t\tif(uctParams.ignoreLeaf) {\r\n\t\t\t\tvar hasExpandedChildren=false;\r\n\t\t\t\tfor(var i=0;i<node.children.length;i++)\r\n\t\t\t\t\tif(node.children[i].n.children) {\r\n\t\t\t\t\t\thasExpandedChildren=true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\tif(hasExpandedChildren) {\r\n\t\t\t\t\tfor(var i=0;i<node.children.length;i++) {\r\n\t\t\t\t\t\tvar node1=node.children[i].n;\r\n\t\t\t\t\t\tif(node1.known || node1.children)\r\n\t\t\t\t\t\t\tchildren.push(node1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(children.length==0)\r\n\t\t\t\tfor(var i=0;i<node.children.length;i++)\r\n\t\t\t\t\tchildren.push(node.children[i].n);\r\n\r\n\t\t\tvar evaluation;\r\n\t\t\tswitch(uctParams.propagation) {\r\n\t\t\tcase \"maximin\":\r\n\t\t\t\tevaluation=GetMaximinEval(node,children);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"minimax2min-avg\":\r\n\t\t\t\tvar evaluation1=GetMaximinEval(node,children);\r\n\t\t\t\tvar evaluation2=GetMinimaxEval(node,children);\r\n\t\t\t\tevaluation=(evaluation1+evaluation2)/2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"minimax2min-best\":\r\n\t\t\t\tvar evaluation1=GetMaximinEval(node,children);\r\n\t\t\t\tvar evaluation2=GetMinimaxEval(node,children);\r\n\t\t\t\tif(node.who==1)\r\n\t\t\t\t\tevaluation=Math.max(evaluation1,evaluation2);\r\n\t\t\t\telse\r\n\t\t\t\t\tevaluation=Math.min(evaluation1,evaluation2);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"product\":\r\n\t\t\t\tevaluation=GetPropabilityProductEval(node,children);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"minimax\":\r\n\t\t\tcase \"mixed\":\r\n\t\t\tdefault:\r\n\t\t\t\tevaluation=GetMinimaxEval(node,children);\r\n\t\t\t\tif(uctParams.propagation==\"mixed\" && uctParams.productRatio>0) {\r\n\t\t\t\t\tevaluation2=GetProductEval(node,children);\r\n\t\t\t\t\tevaluation=uctParams.productRatio*evaluation2+(1-uctParams.productRatio)*evaluation;\r\n\t\t\t\t}\r\n\t\t\t\tif(uctParams.useDepthWeights)\r\n\t\t\t\t\tevaluation=WeightEval(evaluation,node.depth+1);\r\n\t\t\t}\r\n\t\t\tif(uctParams.uncertaintyFactor) // tend to do good things now rather than later\r\n\t\t\t\tevaluation*=1-Math.pow(10,-uctParams.uncertaintyFactor)*Math.log(node.depth+1);\r\n\t\t\tif(node.evaluation!==evaluation) {\r\n\t\t\t\tnode.evaluation=evaluation;\r\n\t\t\t\tif(!uctParams.directVisits)\r\n\t\t\t\t\tnode.visits+=visits;\r\n\t\t\t\tPropagateEval(node,visits,visited);\r\n\t\t\t} else if(!uctParams.directVisits)\r\n\t\t\t\tPropagateVisits(node,visits,visited);\r\n\t\t}\r\n\t\tfunction PropagateEval(node,visits,visited) {\r\n\t\t\tif(node.parents.length==0) // root node: stop here\r\n\t\t\t\treturn;\r\n\t\t\tif(aGame.mOptions.uctTransposition && !aGame.mOptions.uctIgnoreLoop) {\r\n\t\t\t\tif(!visited)\r\n\t\t\t\t\tvisited={};\r\n\t\t\t\tvisited[node.sign]=true;\r\n\t\t\t}\r\n\t\t\tfor(var i=0;i<node.parents.length;i++) {\r\n\t\t\t\tvar parent=node.parents[i];\r\n\t\t\t\tif(uctParams.useAlphaBeta) { // sort the parent children so alpha-beta will be more efficient\r\n\t\t\t\t\tparent.children.sort(function(c1,c2) {\r\n\t\t\t\t\t\treturn (c2.evaluation-c1.evaluation)*node.who;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tPropagateEvalParent(parent,visits,visited);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction PropagateVisits(node,visits,visited) {\r\n\t\t\tif(node.parents.length==0) // root node: stop here\r\n\t\t\t\treturn;\r\n\t\t\tif(aGame.mOptions.uctTransposition && !aGame.mOptions.uctIgnoreLoop) {\r\n\t\t\t\tif(!visited)\r\n\t\t\t\t\tvisited={};\r\n\t\t\t\tvisited[node.sign]=true;\r\n\t\t\t}\r\n\t\t\tfor(var i=0;i<node.parents.length;i++) {\r\n\t\t\t\tvar parent=node.parents[i];\r\n\t\t\t\tif(!(parent.sign in visited)) {\r\n\t\t\t\t\tparent.visits+=visits;\r\n\t\t\t\t\tvisited[parent.sign]=true;\r\n\t\t\t\t\tPropagateVisits(parent,visits,visited);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t * Propagates known boolean up\r\n\t\t */\r\n\t\tfunction PropagateKnownParent(node,visited) {\r\n\t\t\tif(aGame.mOptions.uctTransposition && !aGame.mOptions.uctIgnoreLoop && (node.sign in visited))\r\n\t\t\t\treturn;\r\n\t\t\tvar known=true;\r\n\t\t\tfor(var i=0;i<node.children.length;i++) {\r\n\t\t\t\tvar node1=node.children[i].n;\r\n\t\t\t\tif(node1.known==false) {\r\n\t\t\t\t\tknown=false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(known==true) {\r\n\t\t\t\tnode.known=true;\r\n\t\t\t\tPropagateKnown(node,visited);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction PropagateKnown(node,visited) {\r\n\t\t\tif(node.known==false || node.parents.length==0)\r\n\t\t\t\treturn;\r\n\t\t\tif(aGame.mOptions.uctTransposition && !aGame.mOptions.uctIgnoreLoop) {\r\n\t\t\t\tif(!visited)\r\n\t\t\t\t\tvisited={};\r\n\t\t\t\tvisited[node.sign]=true;\r\n\t\t\t}\r\n\t\t\tfor(var i=0;i<node.parents.length;i++)\r\n\t\t\t\tPropagateKnownParent(node.parents[i],visited);\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t * A simple 32 bits integer transformation function, so that zobrist board signatures can be XORed without side effect\r\n\t\t */\r\n\t\tfunction TransformInteger(v0) {\r\n\t\t\tvar ib=1;\r\n\t\t\tvar v=0;\r\n\t\t\tfor(var i=0;i<32;i++) {\r\n\t\t\t\tvar b=(v0>>>i)&1;\r\n\t\t\t\tif(ib)\r\n\t\t\t\t\tv=(v<<1)|b;\r\n\t\t\t\telse\r\n\t\t\t\t\tv=(v<<1)|(1-b);\r\n\t\t\t\tib=b;\r\n\t\t\t}\r\n\t\t\treturn v;\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t * Runs an iteration\r\n\t\t */\r\n\t\tfunction Step() {\r\n\t\t\tloopCount++;\r\n\r\n\t\t\t// Select\r\n\t\t\tvar board=new (aGame.GetBoardClass())(aGame);\r\n\t\t\tboard.CopyFrom(aGame.mBoard);\r\n\r\n\t\t\tvar pathSign=0; // keep track of the boards we've been through (order doesn't matter)\r\n\t\t\tvar node=rootNode;\r\n\t\t\tvar depth=0;\r\n\t\t\tvar descendMaxDepth=0;\r\n\t\t\tvar moves=[];\r\n\t\t\tvar nodePath=[];\r\n\t\t\tvar parentVisits=loopCount;\r\n\t\t\tvar visited={};\r\n\t\t\tvar alpha=-2;\r\n\t\t\tvar beta=2;\r\n\t\t\twhile(true) {\r\n\t\t\t\tnodePath.push(node);\r\n\t\t\t\tif(depth>descendMaxDepth) {\r\n\t\t\t\t\tdescendMaxDepth=depth;\r\n\t\t\t\t}\r\n\t\t\t\tif(node.children===null)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tvar candidateChildren;\r\n\t\t\t\tif(uctParams.useAlphaBeta) {\r\n\t\t\t\t\tcandidateChildren=[];\r\n\t\t\t\t\tfor(var i=0;i<node.children.length;i++) {\r\n\t\t\t\t\t\tvar child1=node.children[i];\r\n\t\t\t\t\t\tvar node1=child1.n;\r\n\t\t\t\t\t\tcandidateChildren.push(child1);\r\n\t\t\t\t\t\tif(node1.who==1 && // maximizing player\r\n\t\t\t\t\t\t\tnode1.evaluation>alpha)\r\n\t\t\t\t\t\t\talpha=node1.evaluation;\r\n\t\t\t\t\t\tif(node1.who==-1 && // minimizing player\r\n\t\t\t\t\t\t\tnode1.evaluation<beta)\r\n\t\t\t\t\t\t\tbeta=node1.evaluation;\r\n\t\t\t\t\t\tif(beta<alpha) {\r\n\t\t\t\t\t\t\tskippedAlphaBeta+=node.children.length-1-i;\r\n\t\t\t\t\t\t\t//console.log(\"alpha-beta skipped\",node.children.length-1-i,\"nodes\");\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else\r\n\t\t\t\t\tcandidateChildren=node.children;\r\n\t\t\t\tif(aGame.mOptions.uctTransposition && !aGame.mOptions.uctIgnoreLoop) {\r\n\t\t\t\t\tvar candidateChildren0=[];\r\n\t\t\t\t\tfor(var i=0;i<candidateChildren.length;i++)\r\n\t\t\t\t\t\tif(!(candidateChildren[i].n.sign in visited))\r\n\t\t\t\t\t\t\tcandidateChildren0.push(candidateChildren[i]);\r\n\t\t\t\t\tcandidateChildren=candidateChildren0;\r\n\t\t\t\t}\r\n\t\t\t\tvar bestChildren=[], bestUCB;\r\n\t\t\t\tvar parentVisitsLog;\r\n\t\t\t\tif(uctParams.directVisits)\r\n\t\t\t\t\tparentVisitsLog=Math.log(parentVisits);\r\n\t\t\t\telse\r\n\t\t\t\t\tparentVisitsLog=Math.log(node.visits);\r\n\r\n\t\t\t\tfunction PickBestChildren() {\r\n\t\t\t\t\tfor(var i=0;i<candidateChildren.length;i++) {\r\n\t\t\t\t\t\tvar child1=candidateChildren[i];\r\n\t\t\t\t\t\tvar node1=child1.n;\r\n\t\t\t\t\t\tif(node1.known)\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\tvar value=(node1.evaluation*node1.who+1)/2; // ensures value between 0 and 1\r\n\t\t\t\t\t\tvar ucb;\r\n\t\t\t\t\t\tif(uctParams.directVisits)\r\n\t\t\t\t\t\t\tucb=value+uctParams.c*Math.sqrt(parentVisitsLog/child1.f);\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tucb=value+uctParams.c*Math.sqrt(parentVisitsLog/node1.visits);\r\n\t\t\t\t\t\tif(bestChildren.length==0 || ucb>=bestUCB) {\r\n\t\t\t\t\t\t\tif(bestChildren.length>0 && ucb>bestUCB)\r\n\t\t\t\t\t\t\t\tbestChildren=[];\r\n\t\t\t\t\t\t\tbestUCB=ucb;\r\n\t\t\t\t\t\t\tbestChildren.push(child1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t * redistribute evaluations uniformly between 0 and 1 (excluded)\r\n\t\t\t\t */\r\n\t\t\t\tfunction PickBestChildrenDistributeEval() {\r\n\r\n\t\t\t\t\tvar childrenDE={};\r\n\t\t\t\t\tvar values=[];\r\n\t\t\t\t\tfor(var i=0;i<candidateChildren.length;i++) {\r\n\t\t\t\t\t\tvar child1=candidateChildren[i];\r\n\t\t\t\t\t\tvar node1=child1.n;\r\n\t\t\t\t\t\tif(node1.known)\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\tvar value=(node1.evaluation*node1.who+1)/2; // ensures value between 0 and 1\r\n\t\t\t\t\t\tif(childrenDE[value]===undefined) {\r\n\t\t\t\t\t\t\tchildrenDE[value]=[];\r\n\t\t\t\t\t\t\tvalues.push(value);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tchildrenDE[value].push(child1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalues.sort(function(v1,v2) {\r\n\t\t\t\t\t\treturn v1-v2;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tvar step=1/(values.length+1);\r\n\t\t\t\t\tvar index=0;\r\n\t\t\t\t\tfor(var vi=0; vi<values.length;vi++) {\r\n\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\tvar value0=values[vi];\r\n\t\t\t\t\t\tvar children=childrenDE[value0];\r\n\t\t\t\t\t\tvar value1=step*index;\r\n\t\t\t\t\t\tfor(var i=0;i<children.length;i++) {\r\n\t\t\t\t\t\t\tvar child1=children[i];\r\n\t\t\t\t\t\t\tvar node1=child1.n;\r\n\t\t\t\t\t\t\tvar ucb;\r\n\t\t\t\t\t\t\tif(uctParams.directVisits)\r\n\t\t\t\t\t\t\t\tucb=value1+uctParams.c*Math.sqrt(parentVisitsLog/child1.f);\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tucb=value1+uctParams.c*Math.sqrt(parentVisitsLog/node1.visits);\r\n\t\t\t\t\t\t\tif(bestChildren.length==0 || ucb>=bestUCB) {\r\n\t\t\t\t\t\t\t\tif(bestChildren.length>0 && ucb>bestUCB)\r\n\t\t\t\t\t\t\t\t\tbestChildren=[];\r\n\t\t\t\t\t\t\t\tbestUCB=ucb;\r\n\t\t\t\t\t\t\t\tbestChildren.push(child1);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(uctParams.distributeEval)\r\n\t\t\t\t\tPickBestChildrenDistributeEval();\r\n\t\t\t\telse\r\n\t\t\t\t\tPickBestChildren()\r\n\r\n\t\t\t\tif(bestChildren.length==0) // all child nodes are known\r\n\t\t\t\t\treturn;\r\n\t\t\t\tvar child=bestChildren[Math.floor(Math.random()*bestChildren.length)];\r\n\t\t\t\tif(uctParams.directVisits) {\r\n\t\t\t\t\tchild.f++;\r\n\t\t\t\t\tparentVisits=child.f;\r\n\t\t\t\t}\r\n\t\t\t\tnode=child.n;\r\n\t\t\t\tif(aGame.mOptions.uctTransposition && !aGame.mOptions.uctIgnoreLoop)\r\n\t\t\t\t\tvisited[node.sign]=1;\r\n\t\t\t\tdepth++;\r\n\t\t\t\tmoves.push(child.m);\r\n\t\t\t\tboard.ApplyMove(aGame,child.m);\r\n\t\t\t\taGame.AddVisit(board);\r\n\t\t\t\tboard.mMoves=[];\r\n\t\t\t\tsignatures.push(board.GetSignature());\r\n\t\t\t\tif(aGame.mOptions.uctTransposition==\"states\")\r\n\t\t\t\t\tpathSign^=TransformInteger(board.GetSignature()); // consider the states we have been through but not their order\r\n\t\t\t\tboard.mWho=-board.mWho;\r\n\t\t\t}\r\n\r\n\t\t\t// Expand\r\n\t\t\tif(node==rootNode || node.visits>=uctParams.minVisitsExpand) {\r\n\t\t\t\tif(!board.mMoves || board.mMoves.length==0)\r\n\t\t\t\t\tboard.GenerateMoves(aGame);\r\n\t\t\t\tif(board.mFinished) { // in some game implementations, ending is detected while generating the moves\r\n\t\t\t\t\tnode.known=true;\r\n\t\t\t\t\tnode.evaluation=winnerMap[board.mWinner];\r\n\t\t\t\t\tPropagateKnown(node);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnode.children=[];\r\n\t\t\t\t\tvar bestEval=undefined;\r\n\t\t\t\t\tvar known=true;\r\n\t\t\t\t\tfor(var i=0;i<board.mMoves.length;i++) {\r\n\t\t\t\t\t\tvar move=board.mMoves[i];\r\n\t\t\t\t\t\tvar signatures1=[];\r\n\t\t\t\t\t\tvar board1=new (aGame.GetBoardClass())(aGame);\r\n\t\t\t\t\t\tboard1.CopyFrom(board);\r\n\t\t\t\t\t\tboard1.ApplyMove(aGame,move);\r\n\t\t\t\t\t\taGame.AddVisit(board1);\r\n\t\t\t\t\t\tboard1.mMoves=[];\r\n\t\t\t\t\t\tboard1.mWho=-board1.mWho;\r\n\t\t\t\t\t\tif(depth>maxDepth)\r\n\t\t\t\t\t\t\tmaxDepth=depth;\r\n\t\t\t\t\t\tvar signature=board1.GetSignature();\r\n\t\t\t\t\t\tsignatures1.push(signature);\r\n\t\t\t\t\t\tvar sign1;\r\n\t\t\t\t\t\tif(aGame.mOptions.uctTransposition==\"states\") {\r\n\t\t\t\t\t\t\tsign1=pathSign^signature; // board signature is not transformed to differentiate the leaf board\r\n\t\t\t\t\t\t\tsign1^=depth; // depth in signature\r\n\t\t\t\t\t\t} else if(aGame.mOptions.uctTransposition==\"state\")\r\n\t\t\t\t\t\t\tsign1=signature; // only final state counts\r\n\t\t\t\t\t\tvar node1=null;\r\n\t\t\t\t\t\tif(aGame.mOptions.uctTransposition)\r\n\t\t\t\t\t\t\tnode1=uctNodes[sign1];\r\n\t\t\t\t\t\tif(!node1) {\r\n\t\t\t\t\t\t\tnode1=new Node(node,-node.who);\r\n\t\t\t\t\t\t\tnodeCount++;\r\n\t\t\t\t\t\t\tif(aGame.mOptions.uctTransposition) {\r\n\t\t\t\t\t\t\t\tuctNodes[sign1]=node1;\r\n\t\t\t\t\t\t\t\tnode1.sign=sign1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tboard1.Evaluate(aGame);\r\n\t\t\t\t\t\t\tif(board1.mFinished) {\r\n\t\t\t\t\t\t\t\tnode1.known=true;\r\n\t\t\t\t\t\t\t\tnode1.evaluation=winnerMap[board1.mWinner]; // 1, -1 or 0\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif(isNaN(board1.mEvaluation))\r\n\t\t\t\t\t\t\t\t\tconsole.error(\"Evaluation in not a number !\",board1.mEvaluation);\r\n\t\t\t\t\t\t\t\tnode1.evaluation=Playout(node1,board1,signatures1);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tnode1.staticEvalSum=node1.evaluation;\r\n\t\t\t\t\t\t\tnode1.staticEvalCount=1;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tredundantNodeCount++;\r\n\t\t\t\t\t\t\tnode1.addParent(node);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(node1.known==false)\r\n\t\t\t\t\t\t\tknown=false;\r\n\t\t\t\t\t\tvar nodeChain={\r\n\t\t\t\t\t\t\tn: node1,\r\n\t\t\t\t\t\t\tm: (new (aGame.GetMoveClass())(move)).Strip(), // Save memory by stripping the stored move\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(uctParams.directVisits)\r\n\t\t\t\t\t\t\tnodeChain.f=1;\r\n\t\t\t\t\t\tnode.children.push(nodeChain);\r\n\t\t\t\t\t\tvar _eval=node1.evaluation*node1.who;\r\n\t\t\t\t\t\tif(bestEval===undefined || _eval>bestEval*node1.who)\r\n\t\t\t\t\t\t\tbestEval=node1.evaluation;\r\n\t\t\t\t\t\tfor(var j=0;j<signatures1.length;j++)\r\n\t\t\t\t\t\t\taGame.RemoveVisit(null,signatures1[j]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnode.evaluation=bestEval;\r\n\t\t\t\t\tPropagateEval(node,uctParams.propagateMultiVisits?board.mMoves.length:1);\r\n\t\t\t\t\tif(uctParams.directVisits)\r\n\t\t\t\t\t\tfor(var i=0;i<nodePath.length;i++)\r\n\t\t\t\t\t\t\tnodePath[i].visits+=uctParams.propagateMultiVisits?board.mMoves.length:1;\r\n\r\n\t\t\t\t\tif(known) {\r\n\t\t\t\t\t\tnode.known=true;\r\n\t\t\t\t\t\tPropagateKnown(node);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(node.known)\r\n\t\t\t\treturn;\r\n\r\n\t\t\t// Simulate\r\n\t\t\tfunction Playout(node,board,signatures) {\r\n\t\t\t\tvar result=null;\r\n\t\t\t\tvar t0=Date.now();\r\n\t\t\t\tfor(var depth=0;depth<uctParams.playoutDepth || board.mWho==uctParams.playoutCeil*rootNode.who;depth++) {\r\n\t\t\t\t\tif(!board.mMoves || board.mMoves.length==0)\r\n\t\t\t\t\t\tboard.GenerateMoves(aGame);\r\n\t\t\t\t\tif(board.mFinished) {\r\n\t\t\t\t\t\tresult={\r\n\t\t\t\t\t\t\tfinished: true,\r\n\t\t\t\t\t\t\twinner: winnerMap[board.mWinner],\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar weightedMoves=[];\r\n\t\t\t\t\tfor(var i=0;i<board.mMoves.length;i++) {\r\n\t\t\t\t\t\tvar board1=new (aGame.GetBoardClass())(aGame);\r\n\t\t\t\t\t\tboard1.CopyFrom(board);\r\n\t\t\t\t\t\tboard1.ApplyMove(aGame,board.mMoves[i]);\r\n\t\t\t\t\t\taGame.AddVisit(board1);\r\n\t\t\t\t\t\tboard1.mMoves=[];\r\n\t\t\t\t\t\tboard1.Evaluate(aGame);\r\n\t\t\t\t\t\tvar evaluation=board1.mEvaluation;\r\n\t\t\t\t\t\tif(board1.mFinished) {\r\n\t\t\t\t\t\t\tif(board1.mWinner==1)\r\n\t\t\t\t\t\t\t\tevaluation=Number.MAX_VALUE;\r\n\t\t\t\t\t\t\telse if(board1.mWinner==-1)\r\n\t\t\t\t\t\t\t\tevaluation=-Number.MAX_VALUE;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tevaluation=0;\r\n\t\t\t\t\t\t} else if(isNaN(board1.mEvaluation))\r\n\t\t\t\t\t\t\tconsole.error(\"Evaluation in not a number !\");\r\n\r\n\t\t\t\t\t\tweightedMoves.push({\r\n\t\t\t\t\t\t\tmove: board.mMoves[i],\r\n\t\t\t\t\t\t\tevaluation: evaluation,\r\n\t\t\t\t\t\t\tboard: board1,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\taGame.RemoveVisit(board1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tweightedMoves.sort(function(a1,a2) {\r\n\t\t\t\t\t\tvar ev1=a1.evaluation*board.mWho;\r\n\t\t\t\t\t\tvar ev2=a2.evaluation*board.mWho;\r\n\t\t\t\t\t\treturn ev2-ev1;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t * Pick the next move in the playout with a preference for the moves that seem the best.\r\n\t\t\t\t\t * For instance, with playoutSpread=2, the probability weight to pick the best move is 1/2,\r\n\t\t\t\t\t * the second best move 1/4, third best 1/8, ...\r\n\t\t\t\t\t * If several moves have the same quality, they have the same probability.\r\n\t\t\t\t\t */\r\n\t\t\t\t\tvar n=weightedMoves.length;\r\n\t\t\t\t\tvar r=1/uctParams.playoutSpread;\r\n\t\t\t\t\tvar max=(1-Math.pow(r,n+1))/(1-r)-1;\r\n\t\t\t\t\tvar rnd=Math.random()*max;\r\n\t\t\t\t\tvar equalMoves, lastEval=undefined, cursor=0, reached=false;\r\n\t\t\t\t\tfor(var i=0;i<n;i++) {\r\n\t\t\t\t\t\tvar wMove=weightedMoves[i];\r\n\t\t\t\t\t\tvar ev=wMove.evaluation;\r\n\t\t\t\t\t\tif(ev!==lastEval) {\r\n\t\t\t\t\t\t\tif(reached) {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tequalMoves=[wMove];\r\n\t\t\t\t\t\t\t\tlastEval=ev;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tequalMoves.push(wMove);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcursor+=Math.pow(r,i+1);\r\n\t\t\t\t\t\tif(cursor>=rnd)\r\n\t\t\t\t\t\t\treached=true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar pickedMove=equalMoves[Math.floor(Math.random()*equalMoves.length)];\r\n\r\n\t\t\t\t\tboard=pickedMove.board;\r\n\t\t\t\t\taGame.AddVisit(board);\r\n\t\t\t\t\tsignatures.push(board.GetSignature()); // remember the board state signature so it can be removed later\r\n\t\t\t\t\tboard.mWho=-board.mWho;\r\n\t\t\t\t\tif(board.mFinished) {\r\n\t\t\t\t\t\tresult={\r\n\t\t\t\t\t\t\tfinished: true,\r\n\t\t\t\t\t\t\twinner: winnerMap[board.mWinner],\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(result===null) {\r\n\t\t\t\t\tresult={\r\n\t\t\t\t\t\tfinished: false,\r\n\t\t\t\t\t\teval: board.mEvaluation\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// update stats\r\n\t\t\t\tpoDur+=Date.now()-t0;\r\n\t\t\t\tpoCount++;\r\n\r\n\t\t\t\tvar nodeEval;\r\n\t\t\t\tif(result.finished)\r\n\t\t\t\t\tnodeEval=result.winner; // 1, -1 or 0\r\n\t\t\t\telse {\r\n\t\t\t\t\tif(uctParams.debugRawEval)\r\n\t\t\t\t\t\tnode.rawEval=result.eval;\r\n\t\t\t\t\tvar normEval=NormalizeEval(result.eval);\r\n\t\t\t\t\tUpdateDepthEval(normEval,node.depth);\r\n\t\t\t\t\tnodeEval=normEval;\r\n\t\t\t\t}\r\n\t\t\t\treturn nodeEval;\r\n\t\t\t}\r\n\t\t\tvar evaluation=Playout(node,board,signatures);\r\n\t\t\tnode.staticEvalSum+=evaluation;\r\n\t\t\tnode.staticEvalCount++;\r\n\t\t\tnode.evaluation=node.staticEvalSum/node.staticEvalCount; // averaging normalized evaluations might not be the best way to get an accurate result\r\n\t\t\tPropagateEval(node,1);\r\n\t\t\tif(uctParams.directVisits)\r\n\t\t\t\tfor(var i=0;i<nodePath.length;i++)\r\n\t\t\t\t\tnodePath[i].visits++;\r\n\t\t}\r\n\r\n\t\tvar evalWeights=[];\r\n\t\t/*\r\n\t\t * Update the evaluation weight for the given depth in order to balance evaluation propagation\r\n\t\t */\r\n\t\tfunction UpdateDepthEval(evaluation,depth) {\r\n\t\t\twhile(evalWeights.length<=depth)\r\n\t\t\t\tevalWeights.push({\r\n\t\t\t\t\tcount: 0,\r\n\t\t\t\t\tsum: 0\r\n\t\t\t\t});\r\n\t\t\tvar weight=evalWeights[depth];\r\n\t\t\tweight.sum+=evaluation;\r\n\t\t\tweight.count++;\r\n\t\t}\r\n\t\t/*\r\n\t\t *\r\n\t\t */\r\n\t\tfunction WeightEval(evaluation,depth) {\r\n\t\t\tvar weight=evalWeights[depth];\r\n\t\t\tif(weight===undefined) { // why does this happen, even if very rare ? :(\r\n\t\t\t\twhile(evalWeights.length<depth)\r\n\t\t\t\t\tevalWeights.push({\r\n\t\t\t\t\t\tcount: 0,\r\n\t\t\t\t\t\tsum: 0\r\n\t\t\t\t\t});\r\n\t\t\t\tevalWeights.push({\r\n\t\t\t\t\tcount: 1,\r\n\t\t\t\t\tsum: evaluation\r\n\t\t\t\t});\r\n\t\t\t\treturn evaluation;\r\n\t\t\t}\r\n\t\t\tvar average=weight.count>0?weight.sum/weight.count:0;\r\n\t\t\tif(evaluation>average) {\r\n\t\t\t\tevaluation=(evaluation-average)/(1-average);\r\n\t\t\t} else if(evaluation<average) {\r\n\t\t\t\tevaluation=-(average-evaluation)/(average+1);\r\n\t\t\t}\r\n\t\t\treturn evaluation;\r\n\t\t}\r\n\r\n\t\tif(!aGame.mBoard.mMoves || aGame.mBoard.mMoves.length==0)\r\n\t\t\taGame.mBoard.GenerateMoves(aGame);\r\n\t\tif(aGame.mBoard.mMoves.length==1) { // only one possible move: pick it\r\n\t\t\taGame.mBestMoves=[aGame.mBoard.mMoves[0]];\r\n\t\t\tJocUtil.schedule(aGame, \"Done\", {});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(aGame.mBoard.mMoves.length==0) {\r\n\t\t\tconsole.error(\"No move available\",aGame);\r\n\t\t\tdebugger;\r\n\t\t}\r\n\t\tvar rootNode=new Node(null,-aGame.mWho);\r\n\t\tnodeCount++;\r\n\t\tif(aGame.mOptions.uctTransposition)\r\n\t\t\tuctNodes[aGame.mBoard.GetSignature()]=rootNode;\r\n\r\n\t\tvar t0=Date.now();\r\n\t\tvar lastProgressPercent=-1;\r\n\t\tfunction Run() {\r\n\t\t\tif(aGame.mAborted) {\r\n\t\t\t\taGame.mAbortCallback.call(aGame);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar now=Date.now();\r\n\t\t\tvar progressPercent=0;\r\n\t\t\tif(uctParams.maxDuration>0)\r\n\t\t\t\tprogressPercent=Math.round(100*(now-t0)/(uctParams.maxDuration*1000));\r\n\t\t\tif(uctParams.maxLoops>0)\r\n\t\t\t\tprogressPercent=Math.max(progressPercent,100*loopCount/uctParams.maxLoops);\r\n\t\t\tif(uctParams.maxNodes>0)\r\n\t\t\t\tprogressPercent=Math.max(progressPercent,100*nodeCount/uctParams.maxNodes);\r\n\t\t\tprogressPercent = Math.min(100,progressPercent);\r\n\t\t\tif(progressPercent!=lastProgressPercent) {\r\n\t\t\t\tlastProgressPercent=progressPercent;\r\n\t\t\t\tif(aGame.mProgressCallback)\r\n\t\t\t\t\taGame.mProgressCallback(progressPercent);\r\n\t\t\t}\r\n\t\t\tif(!rootNode.children || (rootNode.known==false &&\r\n\t\t\t\t\t(uctParams.maxDuration<=0 || now<uctParams.maxDuration*1000+t0) &&\r\n\t\t\t\t\t(uctParams.maxLoops<=0 || loopCount<uctParams.maxLoops) &&\r\n\t\t\t\t\t(uctParams.maxNodes<=0 || nodeCount<uctParams.maxNodes)\r\n\t\t\t\t)) {\r\n\t\t\t\tdo {\r\n\t\t\t\t\tsignatures=[];\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tStep();\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tconsole.error(\"UCT step\",e);\r\n\t\t\t\t\t\tdebugger;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor(var i=0;i<signatures.length;i++)\r\n\t\t\t\t\t\taGame.RemoveVisit(null,signatures[i]);\r\n\t\t\t\t} while(Date.now()-100<now);\r\n\t\t\t\tsetTimeout(Run,0);\r\n\t\t\t} else {\r\n\t\t\t\tif(uctParams.log) {\r\n\t\t\t\t\tReportStats(rootNode);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar bestEval=undefined;\r\n\t\t\t\taGame.mBestMoves=[];\r\n\t\t\t\tif(uctParams.pickMove==\"maxvisits\" && uctParams.directVisits) {\r\n\t\t\t\t\tfor(var i=0;i<rootNode.children.length;i++) {\r\n\t\t\t\t\t\tvar child=rootNode.children[i];\r\n\t\t\t\t\t\tvar node=child.n;\r\n\t\t\t\t\t\tif(node.evaluation==node.who) {\r\n\t\t\t\t\t\t\taGame.mBestMoves.push(child.m);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(aGame.mBestMoves.length==0) {\r\n\t\t\t\t\t\tfor(var i=0;i<rootNode.children.length;i++) {\r\n\t\t\t\t\t\t\tvar child=rootNode.children[i];\r\n\t\t\t\t\t\t\tif(bestEval===undefined || bestEval<=child.f) {\r\n\t\t\t\t\t\t\t\tif(bestEval===undefined || bestEval<child.f)\r\n\t\t\t\t\t\t\t\t\taGame.mBestMoves=[];\r\n\t\t\t\t\t\t\t\tbestEval=child.f;\r\n\t\t\t\t\t\t\t\taGame.mBestMoves.push(child.m);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar bestEval2=undefined;\r\n\t\t\t\t\tvar candidateChildren=[];\r\n\t\t\t\t\tif(uctParams.pickMove==\"besteval-multivisits\")\r\n\t\t\t\t\t\trootNode.children.forEach(function(child) {\r\n\t\t\t\t\t\t\tif(child.n.visits>1 || child.n.known==true)\r\n\t\t\t\t\t\t\t\tcandidateChildren.push(child);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\tif(candidateChildren.length==0)\r\n\t\t\t\t\t\tcandidateChildren=rootNode.children;\r\n\t\t\t\t\tfor(var i=0;i<candidateChildren.length;i++) {\r\n\t\t\t\t\t\tvar child=candidateChildren[i];\r\n\t\t\t\t\t\tvar node=child.n;\r\n\t\t\t\t\t\tvar staticEval=node.staticEvalSum/node.staticEvalCount;\r\n\t\t\t\t\t\tif(bestEval===undefined || bestEval>=node.evaluation*rootNode.who) {\r\n\t\t\t\t\t\t\tif(bestEval===undefined || bestEval>node.evaluation*rootNode.who || (\r\n\t\t\t\t\t\t\t\tbestEval==node.evaluation*rootNode.who && (\r\n\t\t\t\t\t\t\t\t\t\tbestEval2===undefined || bestEval2>rootNode.who*staticEval\r\n\t\t\t\t\t\t\t\t\t\t))) {\r\n\t\t\t\t\t\t\t\tbestEval2=staticEval;\r\n\t\t\t\t\t\t\t\taGame.mBestMoves=[];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbestEval=node.evaluation*rootNode.who;\r\n\t\t\t\t\t\t\taGame.mBestMoves.push(child.m);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tJocUtil.schedule(aGame, \"Done\", {});\r\n\t\t\t}\r\n\t\t}\r\n\t\tRun();\r\n\r\n\t\tfunction ReportStats(node) {\r\n\t\t\tconsole.log(\"  duration\",Date.now()-t0);\r\n\t\t\tconsole.log(\"  evaluation:\",node.evaluation);\r\n\t\t\tconsole.log(\"  fully explored:\",node.known);\r\n\t\t\tconsole.log(\"  node count:\",nodeCount);\r\n\t\t\tconsole.log(\"  redundant node count:\",redundantNodeCount);\r\n\t\t\tconsole.log(\"  max depth:\",maxDepth);\r\n\t\t\tconsole.log(\"  alpha-beta\",uctParams.useAlphaBeta,\"skipped\",skippedAlphaBeta);\r\n\t\t\tconsole.log(\" \",loopCount,\"steps, per step\",(Date.now()-t0)/loopCount,\"ms\");\r\n\t\t\tconsole.log(\" \",poCount,\"playouts\",poDur,\"ms, per playout\",poDur/poCount,\"ms\");\r\n\t\t\tconsole.log(\"  UCT c\",uctParams.c);\r\n\t\t\tconsole.log(\"  tree\",rootNode);\r\n\r\n\t\t\tfunction ShowMinimax(node,depth) {\r\n\t\t\t\tif(uctParams.propagation!=\"minimax\" && (uctParams.propagation!=\"mixed\" || uctParams.productRatio>0)) {\r\n\t\t\t\t\tconsole.warn(\"Cannot display minimax tree on propagation\",uctParams.propagation,\"pp ratio\",uctParams.productRatio);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tvar indent=\"\";\r\n\t\t\t\tfor(var i=0;i<depth;i++)\r\n\t\t\t\t\tindent+=\"  \";\r\n\t\t\t\tconsole.log(indent+\"*\",depth,\"*\",-node.who,\"eval\",node.evaluation);\r\n\t\t\t\tfor(var i=0;i<node.children.length;i++) {\r\n\t\t\t\t\tvar child1=node.children[i];\r\n\t\t\t\t\tvar node1=child1.n;\r\n\t\t\t\t\tconsole.log(indent,\"  \"+(node1.evaluation==node.evaluation?\"*\":\" \")+\" move\",(new (aGame.GetMoveClass())(child1.m)).ToString(),\r\n\t\t\t\t\t\t\t\"visits\",node1.visits,\r\n\t\t\t\t\t\t\t\"eval\",node1.evaluation,\r\n\t\t\t\t\t\t\t\"known\",node1.known,\r\n\t\t\t\t\t\t\t\"sev\",node1.staticEvalSum+\"/\"+node1.staticEvalCount,\r\n\t\t\t\t\t\t\t\"who\",node1.who,\r\n\t\t\t\t\t\t\t\"children\",node1.children?node1.children.length:\"no\");\r\n\t\t\t\t\tif(node1.children && node1.evaluation==node.evaluation)\r\n\t\t\t\t\t\tShowMinimax(node1,depth+1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(uctParams.showMinimaxTree) {\r\n\t\t\t\tconsole.log(\"Minimax tree\");\r\n\t\t\t\tShowMinimax(node,0);\r\n\t\t\t}\r\n\r\n\t\t\tif(uctParams.checkSide) {\r\n\t\t\t\tvar checkSideNodeCount=0;\r\n\t\t\t\tvar checkSideError=0;\r\n\t\t\t\tfunction CheckSide(node) {\r\n\t\t\t\t\tcheckSideNodeCount++;\r\n\t\t\t\t\tif(node.children)\r\n\t\t\t\t\t\tfor(var i=0;i<node.children.length;i++) {\r\n\t\t\t\t\t\t\tvar child1=node.children[i];\r\n\t\t\t\t\t\t\tif(child1.n.who!=-node.who)\r\n\t\t\t\t\t\t\t\tcheckSideError++;\r\n\t\t\t\t\t\t\tCheckSide(child1.n);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tCheckSide(rootNode);\r\n\t\t\t\tconsole.log(\"  tree side alternance\",\"node\",checkSideNodeCount,\"errors\",checkSideError);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n})();\r\n\r\n","/*    Copyright 2017 Jocly\r\n *\r\n *    This program is free software: you can redistribute it and/or  modify\r\n *    it under the terms of the GNU Affero General Public License, version 3,\r\n *    as published by the Free Software Foundation.\r\n *\r\n *    This program is distributed in the hope that it will be useful,\r\n *    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n *    GNU Affero General Public License for more details.\r\n *\r\n *    You should have received a copy of the GNU Affero General Public License\r\n *    along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n *\r\n *    As a special exception, the copyright holders give permission to link the\r\n *    code of portions of this program with the OpenSSL library under certain\r\n *    conditions as described in each individual source file and distribute\r\n *    linked combinations including the program with the OpenSSL library. You\r\n *    must comply with the GNU Affero General Public License in all respects\r\n *    for all of the code used other than as permitted herein. If you modify\r\n *    file(s) with this exception, you may extend this exception to your\r\n *    version of the file(s), but you are not obligated to do so. If you do not\r\n *    wish to do so, delete this exception statement from your version. If you\r\n *    delete this exception statement from all source files in the program,\r\n *    then also delete it in the license file.\r\n */\r\n\r\ntry {\r\n\r\n\texports.Game = JocGame = function() {}\r\n\texports.Board = JocBoard = function() {}\r\n\texports.Move = JocMove = function() {}\r\n\r\n} catch(e) {\r\n\tglobal.JocGame = exports.Game = function() {};\r\n\tglobal.JocBoard = exports.Board = function() {};\r\n\tglobal.JocMove = exports.Move = function() {};\r\n\r\n\t(function() {\r\n\t\tvar r = require;\r\n\t\tvar ju = r(\"./jocly.util.js\");\r\n\t\tglobal.MersenneTwister = ju.MersenneTwister;\r\n\t\tglobal.JocUtil = ju.JocUtil;\r\n\t\tglobal.JoclyUCT = r(\"./jocly.uct.js\").JoclyUCT;\r\n\t})();\r\n}\r\n\r\nJocGame.PLAYER_A = 1;\r\nJocGame.PLAYER_B = -1;\r\nJocGame.DRAW = 2;\r\n\r\nif(typeof document!=\"undefined\")\r\n\tJocGame.CLICK=('ontouchstart' in document.documentElement)?\"touchstart\":\"click\";\r\nelse\r\n\tJocGame.CLICK=\"click\";\r\n/*\r\nJocGame.MOUSEMOVE_EVENT=('ontouchstart' in document.documentElement)?\"touchmove\":\"mousemove\";\r\nJocGame.MOUSEDOWN_EVENT=('ontouchstart' in document.documentElement)?\"touchstart\":\"mousedown\";\r\nJocGame.MOUSEUP_EVENT=('ontouchstart' in document.documentElement)?\"touchend\":\"mouseup\";\r\n*/\r\n\r\nJocGame.MOUSEMOVE_EVENT=\"touchmove mousemove\";\r\nJocGame.MOUSEDOWN_EVENT=\"touchstart mousedown\";\r\nJocGame.MOUSEUP_EVENT=\"touchend mouseup joclyclick\";\r\n\r\n/* biggest integer with unit precision:\r\n   Math.pow(2,53)-1 < Math.pow(2,53) is true\r\n   Math.pow(2,54)-1 < Math.pow(2,54) is false */\r\nJocGame.MAX_VALUE = Math.pow(2,53);\r\n\r\nJocGame.prototype = {}\r\n\r\nJocGame.prototype.Init = function(aOptions) {\r\n\tthis.mWho = JocGame.PLAYER_A;\r\n\tthis.mViewAs = JocGame.PLAYER_A;\r\n\tthis.mTopLevel = 3;\r\n\tthis.mLoopMax = 300;\r\n\tthis.mPreventRepeat = false;\r\n\tif(aOptions) {\r\n\t\tthis.mOptions = aOptions.game;\r\n\t\tthis.mViewOptions = aOptions.view;\r\n\t\tthis.mSkin = this.mViewOptions.skins[0].name; // TODO check if 3D not supported\r\n\t\tthis.mNotation=false;\r\n\t\tthis.mShowMoves=this.mViewOptions.useShowMoves;\r\n\t\tthis.mSounds=!!this.mViewOptions.sounds;\r\n\t\tthis.mAutoComplete=false;\r\n\r\n\t\tif(typeof(this.mOptions.level)!=\"undefined\")\r\n\t\t\tthis.mTopLevel = this.mOptions.level;\r\n\t\tif (typeof(this.mOptions.loopMax)!=\"undefined\")\r\n\t\t\tthis.mLoopMax = this.mOptions.loopMax;\r\n\t\tthis.mVisitedBoards = {};\r\n\t\tif(typeof(this.mOptions.viewAs)!=\"undefined\")\r\n\t\t\tthis.mViewAs = this.mOptions.viewAs;\r\n\t\telse\r\n\t\t\tthis.mOptions.viewAs = this.mViewAs;\r\n\t}\r\n\tthis.mNextSchedule = null;\r\n\tthis.mPlayedMoves = [];\r\n\tthis.mFullPlayedMoves = [];\r\n\tthis.mViewInited = false;\r\n\tthis.mGameInited = false;\r\n\tif(aOptions && aOptions.initial)\r\n\t\tthis.GameInitGame(aOptions.initial);\r\n\telse\r\n\t\tthis.GameInitGame();\r\n\tthis.mBoard = new (this.GetBoardClass())(this);\r\n\tif(this.mBoard.InitialPosition)\r\n\t\tthis.mBoard.InitialPosition(this);\r\n\tthis.mBoard.mMoves=[];\r\n\tthis.mBoard.mWho = this.mWho;\r\n\tthis.listeners = [];\r\n\r\n}\r\n\r\nJocGame.prototype.AddListener = function(listener) {\r\n\tthis.listeners.push(listener);\r\n}\r\n\r\nJocGame.prototype.RemoveListener = function(listener) {\r\n\tfor(var i=this.listeners.length-1;i>=0;i--)\r\n\t\tif(this.listeners[i]==listener)\r\n\t\t\tthis.listeners.splice(i,1);\r\n}\r\n\r\nJocGame.prototype.DispatchMessage = function(message) {\r\n\tvar self = this;\r\n\tthis.listeners.forEach(function(listener) {\r\n\t\tlistener.call(self,message);\r\n\t});\r\n}\r\n\r\nJocGame.prototype.HumanMove = function(move) {\r\n\tthis.DispatchMessage({\r\n\t\ttype: \"human-move\",\r\n\t\tmove: move\r\n\t});\r\n}\r\n\r\nJocGame.prototype.MakeMove = function(move) {\r\n\tthis.HumanMove(move);\r\n}\r\n\r\nJocGame.prototype.MachineMove = function(result) {\r\n\tthis.DispatchMessage({\r\n\t\ttype: \"machine-move\",\r\n\t\tresult: result\r\n\t});\r\n}\r\n\r\nJocGame.prototype.MachineProgress = function(progress) {\r\n\tthis.DispatchMessage({\r\n\t\ttype: \"machine-progress\",\r\n\t\tprogress: progress\r\n\t});\r\n}\r\n\r\nJocGame.prototype.PlayMove = function(move) {\r\n\tvar self = this;\r\n\tvar promise = new Promise(function(resolve,reject) {\r\n\t\tself.mOldBoard=new (self.GetBoardClass())(self);\r\n\t\tself.mOldBoard.CopyFrom(self.mBoard);\r\n\t\tself.ApplyMove(move);\r\n\t\tself.MoveShown = function() {\r\n\t\t\tdelete self.MoveShown;\r\n\t\t\tresolve();\r\n\t\t}\r\n\t\tvar moveShown = self.mBoard.PlayedMove(self,move);\r\n\t\tif(moveShown) {\r\n\t\t\tdelete self.MoveShown;\r\n\t\t\tresolve();\r\n\t\t}\r\n\t});\r\n\treturn promise;\r\n}\r\n\r\nJocGame.prototype.InvertWho = function() {\r\n\tvar who = this.GetWho();\r\n\tthis.SetWho(-who);\r\n}\r\n\r\nJocGame.prototype.AttachElement = function (element, options) {\r\n\toptions = options || {};\r\n\tvar game = this;\r\n\tthis.widget = element;\r\n\tvar promise = new Promise(function(resolve, reject) {\r\n\t\tif (game.gamePreAttachProto)\r\n\t\t\treject(new Error(\"Game already attached\"));\r\n\t\telse {\r\n\t\t\tvar systemJSConfig = {\r\n\t\t\t\tmeta: {\r\n\t\t\t\t\t\"jocly-xdview.js\": {\r\n\t\t\t\t\t\tglobals: {\r\n\t\t\t\t\t\t\tjQuery: \"jquery.js\",\r\n\t\t\t\t\t\t\tTHREE: \"three.js\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsystemJSConfig.meta[\"games/\" + game.module + \"/\" + game.name + \"-view.js\"] = {\r\n\t\t\t\tglobals: {\r\n\t\t\t\t\txdview: \"jocly-xdview.js\",\r\n\t\t\t\t\tjQuery: \"jquery.js\",\r\n\t\t\t\t\tTHREE: \"three.js\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tSystemJS.config(systemJSConfig);\r\n\r\n\t\tPromise.all([\r\n\t\t\tSystemJS.import(\"jocly-xdview.js\"),\r\n\t\t\tSystemJS.import(\"games/\" + game.module + \"/\" + game.name + \"-view.js\")\r\n\t\t]).then(function(args) {\r\n\t\t\tvar xdview = args[0], view = args[1];\r\n\t\t\tgame.gamePreAttachProto = Object.getPrototypeOf(game);\r\n\t\t\tvar gameProto = Object.assign({}, game.gamePreAttachProto, xdview.view.Game, view.view.Game);\r\n\t\t\tObject.setPrototypeOf(game, gameProto);\r\n\r\n\t\t\tvar Board = game.mBoardClass;\r\n\t\t\tgame.boardPreAttachProto = Board.prototype;\r\n\t\t\tObject.assign(Board.prototype, game.boardPreAttachProto, xdview.view.Board, view.view.Board);\r\n\r\n\t\t\tvar Move = game.mMoveClass;\r\n\t\t\tgame.movePreAttachProto = Move.prototype;\r\n\t\t\tObject.assign(Move.prototype, game.movePreAttachProto, view.view.Move);\r\n\r\n\t\t\tgame.mGeometry = {\r\n\t\t\t\twidth: game.widget.clientWidth,\r\n\t\t\t\theight: game.widget.clientHeight\r\n\t\t\t}\r\n\t\t\tgame.mWidget = jQuery(game.widget);\r\n\r\n\t\t\tvar defaultViewOptions = game.mViewOptions && game.mViewOptions.defaultOptions;\r\n\t\t\tif(defaultViewOptions) {\r\n\t\t\t\tconst optDefs = {\r\n\t\t\t\t\t\"mSkin\": \"skin\",\r\n\t\t\t\t\t\"mNotation\": \"notation\",\r\n\t\t\t\t\t\"mSounds\": \"sounds\",\r\n\t\t\t\t\t\"mShowMoves\": \"moves\",\r\n\t\t\t\t\t\"mAutoComplete\": \"autocomplete\"\r\n\t\t\t\t}\r\n\t\t\t\tfor(var opt in optDefs)\r\n\t\t\t\t\tif(typeof defaultViewOptions[optDefs[opt]]!=\"undefined\")\r\n\t\t\t\t\t\tgame[opt] = defaultViewOptions[optDefs[opt]];\r\n\t\t\t}\r\n\r\n\t\t\tgame.UpdateSounds();\r\n\t\t\tresolve();\r\n\t\t}, function(e) {\r\n\t\t\treject(e);\r\n\t\t});\r\n\t});\r\n\treturn promise;\r\n}\r\n\r\nJocGame.prototype.DetachElement = function () {\r\n\tvar game = this;\r\n\tthis.widget = element;\r\n\tvar promise = new Promise(function(resolve, reject) {\r\n\t\tif (!game.gamePreAttachProto)\r\n\t\t\treject(new Error(\"Game not attached\"));\r\n\t\telse {\r\n\t\t\t// TODO\r\n\t\t\tresolve();\r\n\t\t}\r\n\t});\r\n\treturn promise;\r\n}\r\n\r\nJocGame.prototype.GetBoardClass = function() {\r\n\treturn this.mBoardClass;\r\n}\r\n\r\nJocGame.prototype.GetMoveClass = function() {\r\n\treturn this.mMoveClass;\r\n}\r\n\r\nJocGame.prototype.CreateMove = function(args) {\r\n\treturn new this.mMoveClass(args);\r\n}\r\n\r\nJocGame.prototype.CloneBoard = function(board) {\r\n\tvar newBoard=new (this.GetBoardClass())(this);\r\n\tnewBoard.CopyFrom(board);\r\n\treturn newBoard;\r\n}\r\n\r\nJocGame.prototype.InitView = function() {\r\n\tconsole.log(\"Abstract InitView called\");\r\n}\r\n\r\nJocGame.prototype.LoadCss = function() {\r\n\tvar styles = document.querySelectorAll(\"head link[class='jocly-css']\");\r\n\tstyles.forEach(function(style) {\r\n\t\tstyle.parentNode.removeChild(style);\r\n\t});\r\n\tvar self = this;\r\n\tvar head = document.querySelector(\"head\");\r\n\t(this.mViewOptions.css||[]).forEach(function(css) {\r\n\t\tvar style = document.createElement(\"link\");\r\n\t\tstyle.setAttribute(\"rel\",\"stylesheet\");\r\n\t\tstyle.setAttribute(\"type\",\"text/css\");\r\n\t\tstyle.setAttribute(\"class\",\"jocly-css\");\r\n\t\tstyle.setAttribute(\"href\",self.mViewOptions.fullPath+\"/\"+css);\r\n\t\thead.appendChild(style);\r\n\t});\r\n}\r\n\r\nJocGame.prototype.GameInitView = function() {\r\n\tif(this.mGeometry.width>0 && this.mGeometry.height>0) {\r\n\t\tthis.LoadCss();\r\n\t\tthis.InitView();\r\n\t\tthis.mViewInited=true;\r\n\t}\r\n}\r\n\r\nJocGame.prototype.DestroyView = function() {\r\n\tif(this.mWidget)\r\n\t\tthis.mWidget.empty();\r\n}\r\n\r\nJocGame.prototype.GameDestroyView = function() {\r\n\tif(this.mViewInited) {\r\n\t\tthis.DestroyView();\r\n\t\tthis.mViewInited=false;\r\n\t}\r\n}\r\n\r\nJocGame.prototype.CanPlaySound = function(tag) {\r\n\treturn true;\r\n}\r\n\r\nJocGame.prototype.UpdateSounds = function() {\r\n\tvar joclySounds = $(\"#jocly-sounds\");\r\n\tif(joclySounds.length==0)\r\n\t\tjoclySounds = $(\"<div/>\").attr(\"id\",\"jocly-sounds\").css({display:\"none\"}).appendTo($(\"body\"));\r\n\tfunction AddSound(tag, path, fname) {\r\n\t\tvar audio = $(\"<audio/>\").attr(\"id\", \"jocly-sound-\" + tag).attr(\"preload\",\"auto\");\r\n                $(\"<source/>\").attr(\"src\", path + \"/res/sounds/\" + fname + \".ogg\").attr(\"type\", \"audio/ogg\").appendTo(audio);\r\n\t\t$(\"<source/>\").attr(\"src\", path + \"/res/sounds/\" + fname + \".mp3\").attr(\"type\", \"audio/mp3\").appendTo(audio);\r\n\t\taudio.appendTo(joclySounds);\r\n\t}\r\n\tjoclySounds.empty();\r\n\tvar defaultSounds = {\r\n\t\tuseraction: \"bells1\",\r\n\t\tusermove: \"bells1\",\r\n\t\twin: \"winblues\",\r\n\t\tloss: \"lose\",\r\n\t\tend: \"draw\",\r\n\t}\r\n\tfor (var i in defaultSounds)\r\n\t\tAddSound(i, this.config.baseURL, defaultSounds[i]);\r\n\tif (this.config.view.sounds) {\r\n\t\tfor (var i in this.config.view.sounds) {\r\n\t\t\t$(\"#jocly-sound-\" + i).remove();\r\n\t\t\tif (this.config.view.sounds[i])\r\n\t\t\t\tif (this.config.view.sounds[i])\r\n\t\t\t\t\tAddSound(i, this.config.baseURL+\"games/\"+this.config.model.module, this.config.view.sounds[i]);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nJocGame.prototype.PlaySound = function(tag) {\r\n\tif(!this.CanPlaySound(tag))\r\n\t\treturn;\r\n\tvar audio=document.getElementById(\"jocly-sound-\"+tag);\r\n\tif(audio && this.mSounds) {\r\n\t\tif(typeof this.mNeedPhonegapMedia==\"undefined\") {\r\n\t\t\tthis.mNeedPhonegapMedia=false;\r\n\t\t\tthis.mNeedPhonegapMedia = window && window.cordova && (typeof Media != \"undefined\");\r\n\t\t}\r\n\r\n\t\tif(this.mNeedPhonegapMedia) {\r\n\t\t\tif(typeof this.mPhonegapMediaLib==\"undefined\")\r\n\t\t\t\tthis.mPhonegapMediaLib={};\r\n\t\t\tif(typeof this.mPhonegapMediaLib[tag]==\"undefined\") {\r\n\t\t\t\tvar node=audio.firstChild;\r\n\t\t\t\twhile(node) {\r\n\t\t\t\t\tif(/source/i.test(node.nodeName) && node.getAttribute(\"type\")==\"audio/mp3\")\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tnode=node.nextSibling;\r\n\t\t\t\t}\r\n\t\t\t\tif(node) {\r\n\t\t\t\t\tvar src=node.getAttribute(\"src\");\r\n\r\n\t\t\t\t\tvar m=/^([^#\\?]*)\\/[^#\\?]+/.exec(window.location.pathname);\r\n\t\t\t\t\tif(m)\r\n\t\t\t\t\t\tsrc=src.replace(/^\\./,m[1]);\r\n\t\t\t\t\tsrc=src.replace(/%20/g,\" \");\r\n\t\t\t\t\tthis.mPhonegapMediaLib[tag]=new Media(src, function() {\r\n\t\t\t\t\t\t\t//console.info(\"PlaySound: Media played \"+src);\r\n\t\t\t\t\t\t},function(error) {\r\n\t\t\t\t\t\t\tconsole.warn(\"Jocly PlaySound: Media did not play \"+error.code);\r\n\t\t\t\t\t\t},function(status) {\r\n\t\t\t\t\t\t\t//console.info(\"PlaySound: mediaStatus \"+status);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t} else\r\n\t\t\t\t\tthis.mPhonegapMediaLib[tag]=null;\r\n\t\t\t}\r\n\t\t\tif(this.mPhonegapMediaLib[tag]) {\r\n\t\t\t\tthis.mPhonegapMediaLib[tag].play();\r\n\t\t\t}\r\n\t\t} else\r\n\t\t\taudio.cloneNode(true).play();\r\n\t}\r\n}\r\n\r\nJocGame.prototype.InitGame = function() {\r\n}\r\n\r\nJocGame.prototype.GameInitGame = function() {\r\n\tif(this.mGameInited==false) {\r\n\t\tthis.mVisitedBoards={};\r\n\t\tif(arguments.length>0 && arguments[0])\r\n\t\t\tthis.mInitial=arguments[0];\r\n\t\telse\r\n\t\t\tthis.mInitial=null;\r\n\t\tthis.InitGame();\r\n\t\tthis.mGameInited=true;\r\n\t}\r\n}\r\n\r\nJocGame.prototype.DestroyGame = function() {\r\n}\r\n\r\nJocGame.prototype.GameDestroyGame = function() {\r\n\tif(this.mGameInited) {\r\n\t\tthis.DestroyGame();\r\n\t\tthis.mGameInited=false;\r\n\t}\r\n\tif(this.aiWorker) {\r\n\t\ttry {\r\n\t\t\tthis.aiWorker.terminate();\r\n\t\t\tdelete this.aiWorker;\r\n\t\t} catch(e) {\r\n\t\t\tconsole.warn(\"Cannot terminate worker\",e);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nJocGame.prototype.DisplayBoard = function() {\r\n\tif(this.mBoard.Display)\r\n\t\tthis.mBoard.Display(this);\r\n}\r\n\r\nJocGame.prototype.SetWho = function(aWho) {\r\n\tthis.mWho = aWho;\r\n\tthis.mBoard.mWho = aWho;\r\n}\r\n\r\nJocGame.prototype.GetWho = function() {\r\n\treturn this.mWho;\r\n}\r\n\r\nJocGame.prototype.HumanTurn = function() {\r\n\tif(!this.mBoard.mMoves || this.mBoard.mMoves.length==0) {\r\n\t\tthis.mCurrentLevel=-1;\r\n\t\tthis.mBoard.GenerateMoves(this);\r\n\t}\r\n\tthis.mBoard.HumanTurn(this);\r\n}\r\n\r\nJocGame.prototype.HumanTurnEnd = function() {\r\n\tthis.mBoard.HumanTurnEnd(this);\r\n}\r\n\r\nJocGame.prototype.PlayedMove = function(aMove, aOldBoard) {\r\n\tthis.mOldBoard=aOldBoard;\r\n\treturn this.mBoard.PlayedMove(this,aMove);\r\n}\r\n\r\nJocGame.prototype.ShowEnd = function() {\r\n\treturn this.mBoard.ShowEnd(this);\r\n}\r\n\r\nJocGame.prototype.EvaluateBoard = function() {\r\n\tthis.mBoard.mFinished=false;\r\n\tthis.mBoard.mMoves=[];\r\n\tthis.mCurrentLevel=-1;\r\n\tthis.mBoard.GenerateMoves(this);\r\n\tif(this.mBoard.mFinished==false)\r\n\t\tthis.mBoard.Evaluate(this,true,true);\r\n\t//JocLog(\"EvaluatedBoard \"+JSON.stringify(this.mBoard));\r\n}\r\n\r\nJocGame.prototype.GetFinished = function() {\r\n\tthis.EvaluateBoard();\r\n\tif(this.mBoard.mFinished)\r\n\t\treturn this.mBoard.mWinner;\r\n\telse\r\n\t\treturn 0;\r\n\tthis.SetWho(-this.mWho);\r\n\tvar moves=this.mBoard.mMoves;\r\n\tthis.EvaluateBoard();\r\n\tthis.mBoard.mMoves=moves;\r\n\tthis.SetWho(-this.mWho);\r\n\tif(this.mBoard.mFinished)\r\n\t\treturn this.mBoard.mWinner;\r\n\telse\r\n\t\treturn 0;\r\n}\r\n\r\nJocGame.prototype.IsValidMove = function(args) {\r\n\tvar move = new (this.GetMoveClass())(args);\r\n\treturn this.mBoard.IsValidMove(this,move);\r\n}\r\n\r\nJocGame.prototype.AddVisit = function(board,sign) {\r\n\tif(board)\r\n\t\tsign=board.GetSignature();\r\n\tvar visits=this.mVisitedBoards[sign];\r\n\tif(visits===undefined)\r\n\t\tthis.mVisitedBoards[sign]=1;\r\n\telse\r\n\t\tthis.mVisitedBoards[sign]++;\r\n}\r\n\r\nJocGame.prototype.RemoveVisit = function(board,sign) {\r\n\tif(board)\r\n\t\tsign=board.GetSignature();\r\n\tvar visits=this.mVisitedBoards[sign];\r\n\tif(visits!==undefined) {\r\n\t\tif(visits>1)\r\n\t\t\tthis.mVisitedBoards[sign]--;\r\n\t\telse\r\n\t\t\tdelete this.mVisitedBoards[sign];\r\n\t}\r\n}\r\n\r\nvar engdbg_loops, engdbg_time, engdbg_t0;\r\n\r\nJocGame.prototype.StartMachine = function(aOptions) {\r\n\tengdbg_loops=0;\r\n\tengdbg_time=0;\r\n\tengdbg_t0=Date.now();\r\n\r\n\tthis.mDoneCallback=aOptions.Done || this.MachineMove;\r\n\tthis.mProgressCallback=aOptions.Progress || this.MachineProgress;\r\n\tif(typeof(aOptions.level)!=\"undefined\")\r\n\t\tthis.mTopLevel=aOptions.level;\r\n\tif(typeof(aOptions.maxDepth)!=\"undefined\")\r\n\t\tthis.mTopLevel=aOptions.maxDepth;\r\n\tthis.mStartTime = new Date().getTime();\r\n\tthis.mExploredCount = 0;\r\n\tthis.mPickedMoveIndex = 0;\r\n\tthis.mBestMoves = [];\r\n\tthis.mContexts = [];\r\n\tthis.mDuration = 0;\r\n\tthis.mAborted = false;\r\n\tthis.mRandomSeed = 0;\r\n\tif(aOptions.randomSeed && !isNaN(parseInt(aOptions.randomSeed)))\r\n\t\tthis.mRandomSeed = parseInt(aOptions.randomSeed);\r\n\tif(typeof this.mBoard.StaticGenerateMoves ==\"function\") {\r\n\t\tvar moves=this.mBoard.StaticGenerateMoves(this);\r\n\t\tif(moves && moves.length>0) {\r\n\t\t\tthis.mBestMoves=moves;\r\n\t\t\tJocUtil.schedule(this, \"Done\", {});\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\tif(this.mOptions.levelOptions) {\r\n\t\tthis.mOptions.levelOptionsSaved=JSON.parse(JSON.stringify(this.mOptions.levelOptions));\r\n\t\tif(aOptions.level)\r\n\t\t\tObject.assign(this.mOptions.levelOptions,aOptions.level);\r\n\t}\r\n\r\n\tvar aiThread = aOptions.threaded && typeof window==\"object\" && window.Worker;\r\n\tif(aOptions.level && aOptions.level.ai==\"uct\" && JoclyUCT) {\r\n\t\tif(aiThread)\r\n\t\t\tthis.StartThreadedMachine(aOptions,\"uct\");\r\n\t\telse\r\n\t\t\tJoclyUCT.startMachine(this,aOptions);\r\n\t}\r\n\telse { // default is legacy alpha-beta ai\r\n\t\tif(aiThread)\r\n\t\t\tthis.StartThreadedMachine(aOptions,\"alpha-beta\");\r\n\t\telse {\r\n\t\t\tthis.mSavedVisitedBoards={}\r\n\t\t\tfor(var s in this.mVisitedBoards)\r\n\t\t\t\tthis.mSavedVisitedBoards[s]=this.mVisitedBoards[s];\r\n\t\t\tthis.Engine(this.mBoard, this.mTopLevel, false, 0, aOptions.potential); // start algo\r\n\t\t\tthis.Run();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nJocGame.prototype.StartThreadedMachine = function(aOptions,algo) {\r\n\tvar $this = this;\r\n\tdelete aOptions.Done;\r\n\tdelete aOptions.Progress;\r\n\tvar t0 = Date.now();\r\n\tif(!this.aiWorker) {\r\n\t\tthis.aiWorker = new Worker(this.config.baseURL+'jocly.aiworker.js');\r\n\t\tthis.aiWorker.postMessage({\r\n\t\t\ttype: \"Init\",\r\n\t\t\tbaseURL: this.config.baseURL,\r\n\t\t\t//modelURL: this.config.baseURL+\"games/\"+this.config.model.module+\"/\"+this.name+\"-model.js\",\r\n\t\t\toptions: aOptions,\r\n\t\t\tt0: t0\r\n\t\t});\r\n\t}\r\n\tthis.aiWorker.onmessage = function(e) {\r\n\t\tvar message = e.data;\r\n\t\tswitch(message.type) {\r\n\t\t\tcase \"Progress\":\r\n\t\t\t\t$this.mProgressCallback(message.percent);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Done\":\r\n\t\t\t\t$this.mBestMoves = message.data.moves;\r\n\t\t\t\t$this.mPickedMoveIndex = message.data.moveIndex;\r\n\t\t\t\t$this.mExploredCount = message.data.explored;\r\n\t\t\t\t$this.mDuration = message.data.duration;\r\n\t\t\t\t$this.mBoard.evaluation = message.data.evaluation;\r\n\t\t\t\t$this.Done();\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tthis.aiWorker.postMessage({\r\n\t\ttype: \"Play\",\r\n\t\tplayedMoves: this.mPlayedMoves,\r\n\t\tgameOptions: this.mOptions,\r\n\t\tgameName: this.name,\r\n\t\toptions: aOptions,\r\n\t\talgo: algo,\r\n\t\tt0: t0\r\n\t});\r\n}\r\n\r\nJocGame.prototype.StopThreadedMachine = function() {\r\n\tif(this.aiWorker) {\r\n\t\ttry {\r\n\t\t\tthis.aiWorker.terminate();\r\n\t\t\tdelete this.aiWorker;\r\n\t\t} catch(e) {\r\n\t\t\tconsole.warn(\"Cannot terminate worker\",e);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nJocGame.prototype.ScheduleStep = function() {\r\n\tthis.mNextSchedule = this.ExecuteStep;\r\n}\r\n\r\nJocGame.prototype.Random = function(roof) {\r\n\tvar value;\r\n\tif(this.mRandomSeed)\r\n\t\tvalue = this.mRandomSeed % roof;\r\n\telse\r\n\t\tvalue = Math.floor(Math.random()*roof);\r\n\treturn value;\r\n}\r\n\r\nJocGame.prototype.ArrayShuffle = function(arr) {\r\n\tvar i = arr.length;\r\n\tif (i<=0) return;\r\n\twhile (--i) {\r\n\t\tvar j;\r\n\t\tif(this.mRandomSeed)\r\n\t\t\tj=this.mRandomSeed%(i+1);\r\n\t\telse\r\n\t\t\tj=Math.floor(Math.random()*(i+1));\r\n\t\tvar tmp = arr[i];\r\n\t\tarr[i] = arr[j];\r\n\t\tarr[j] = tmp;\r\n\t}\r\n}\r\n\r\nJocGame.prototype.Done = function() {\r\n\tthis.mDuration = new Date().getTime() - this.mStartTime;\r\n\tif(this.mOptions.levelOptionsSaved) {\r\n\t\tthis.mOptions.levelOptions=this.mOptions.levelOptionsSaved;\r\n\t\tthis.mOptions.levelOptionsSaved=null;\r\n\t}\r\n\tif(this.mSavedVisitedBoards)\r\n\t\tthis.mVisitedBoards=this.mSavedVisitedBoards;\r\n\tif (this.mDoneCallback) {\r\n\t\tthis.mPickedMoveIndex = this.Random(this.mBestMoves.length);\r\n\t\ttry {\r\n\t\t\tif(this.mProgressCallback) {\r\n\t\t\t\tthis.mProgressCallback(100);\r\n\t\t\t}\r\n\t\t\tthis.mDoneCallback( {\r\n\t\t\t\tmoves : this.mBestMoves,\r\n\t\t\t\tmove : this.mBestMoves[this.mPickedMoveIndex],\r\n\t\t\t\tmoveIndex : this.mPickedMoveIndex,\r\n\t\t\t\texplored : this.mExploredCount,\r\n\t\t\t\tduration : this.mDuration,\r\n\t\t\t\tevaluation : this.mBoard.mEvaluation\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\tJocLog(\"!!! Done:\" + e,e.stack?e.stack:\"\");\r\n\t\t}\r\n\t}\r\n}\r\n\r\nJocGame.prototype.Run = function() {\r\n\tvar t0=Date.now();\r\n\ttry {\r\n\t\tvar tNow = new Date().getTime();\r\n\t\twhile (this.mNextSchedule && new Date().getTime()-tNow<20 && this.mAborted==false) {\r\n\t\t\tvar fnt = this.mNextSchedule;\r\n\t\t\tthis.mNextSchedule = null;\r\n\t\t\tfnt.call(this);\r\n\t\t}\r\n\t\tif(this.mAborted) {\r\n\t\t\tthis.mAbortCallback();\r\n\t\t} else if (this.mNextSchedule) {\r\n\t\t\tJocUtil.schedule(this, \"Run\", {});\r\n\t\t}\r\n\t} catch(e) {\r\n\t\tJocLog(\"JocGame.Run \"+e+\"\\n\"+e.stack);\r\n\t}\r\n\tvar t1=Date.now();\r\n\tengdbg_loops++;\r\n\tengdbg_time+=t1-t0;\r\n}\r\n\r\nJocGame.prototype.Abort = function(aAbortCallback) {\r\n\tvar $this=this;\r\n\tthis.mAbortCallback=function() {\r\n\t\tif($this.mOptions.levelOptionsSaved) {\r\n\t\t\t$this.mOptions.levelOptions=$this.mOptions.levelOptionsSaved;\r\n\t\t\t$this.mOptions.levelOptionsSaved=null;\r\n\t\t}\r\n\t\tif($this.mSavedVisitedBoards) {\r\n\t\t\t$this.mVisitedBoards=$this.mSavedVisitedBoards;\r\n\t\t\t$this.mSavedVisitedBoards=null;\r\n\t\t}\r\n\t\taAbortCallback();\r\n\t}\r\n\tthis.mAborted=true;\r\n}\r\n\r\nJocGame.prototype.Engine = function(aBoard, aLevel, aBAlpha, aAlpha, aPotential) {\r\n\tvar context = {\r\n\t\tmBoard : aBoard,\r\n\t\tmLevel : aLevel,\r\n\t\tmBAlpha : aBAlpha,\r\n\t\tmAlpha : aAlpha,\r\n\t\tmBestEvaluation : 0,\r\n\t\tmMoveIndex : 0,\r\n\t\tmNextBoard : null,\r\n\t\tmNextBoards : null\r\n\t}\r\n\tthis.mContexts.push(context);\r\n\r\n\tcontext.mBoard.mFinished = false;\r\n\tcontext.mBoard.mWinner = JocGame.DRAW;\r\n\tthis.mCurrentLevel=aLevel;\r\n\tif(typeof context.mBoard.mMoves == \"undefined\")\r\n\t\tcontext.mBoard.mMoves = [];\r\n\tif(context.mBoard.mMoves.length==0)\r\n\t\tcontext.mBoard.GenerateMoves(this);\r\n\r\n\t//JocLog(\"Level \"+aLevel+\" \"+context.mBoard.mMoves.length+\" moves\");\r\n\tif (context.mBoard.mMoves.length == 0 && context.mBoard.mFinished == false) {\r\n\t\tcontext.mBoard.Evaluate(this,true,false);\r\n\t\tif(context.mBoard.mFinished == false) {\r\n\t\t\tJocLog(\"!!! No move possible while not finished - player\",this.mWho,\"board\",context.mBoard);\r\n\t\t\tcontext.mBoard.mFinished=true;\r\n\t\t}\r\n\t}\r\n\r\n\t//JocLog(\"No possible move level \"+aLevel+\" from \"+JSON.stringify(context.mBoard));\r\n\tif(context.mBoard.mFinished) {\r\n\t\tswitch (context.mBoard.mWinner) {\r\n\t\tcase JocGame.PLAYER_A:\r\n\t\t\tcontext.mBoard.mEvaluation = JocGame.MAX_VALUE - (this.mTopLevel - context.mLevel);\r\n\t\t\tbreak;\r\n\t\tcase JocGame.PLAYER_B:\r\n\t\t\tcontext.mBoard.mEvaluation = -JocGame.MAX_VALUE + (this.mTopLevel - context.mLevel);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcontext.mBestEvaluation = context.mBoard.mEvaluation;\r\n\t\tthis.ExecuteStep2();\r\n\t\treturn;\r\n\t}\r\n\r\n\tcontext.mExploCtrl={\r\n\t\texploFrom: this.mExploredCount,\r\n\t\texploTo: this.mExploredCount+aPotential,\r\n\t}\r\n\r\n\tif(context.mBoard.QuickEvaluate) {\r\n\t\tvar boardsMoves=[];\r\n\t\tfor(var i in context.mBoard.mMoves) {\r\n\t\t\tvar board=context.mBoard.MakeAndApply(this,i);\r\n\t\t\tvar quickEval=board.QuickEvaluate(this);\r\n\t\t\tboardsMoves.push({\r\n\t\t\t\tmove: context.mBoard.mMoves[i],\r\n\t\t\t\tboard: board,\r\n\t\t\t\tevaluation: quickEval\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction MoveSort(bm1,bm2) {\r\n\t\t\treturn (bm2.evaluation-bm1.evaluation)*context.mBoard.mWho;\r\n\t\t}\r\n\t\tboardsMoves.sort(MoveSort);\r\n\t\tcontext.mBoard.mMoves=[];\r\n\t\tcontext.mNextBoards=[];\r\n\t\tif(typeof this.mOptions.capMoves != \"undefined\")\r\n\t\t\tboardsMoves=boardsMoves.slice(0,this.mOptions.capMoves);\r\n\t\tfor(var i in boardsMoves) {\r\n\t\t\tcontext.mBoard.mMoves.push(boardsMoves[i].move);\r\n\t\t\tcontext.mNextBoards.push(boardsMoves[i].board);\r\n\t\t}\r\n\t}\r\n\tthis.ExecuteStep();\r\n}\r\n\r\nJocGame.prototype.ExecuteStep = function() {\r\n\tthis.mExploredCount++;\r\n\t// JocLog(\"# context: \"+this.mContexts.length);\r\n\tvar context = this.mContexts[this.mContexts.length - 1];\r\n\t//JocLog(\"ExecuteStep level \"+context.mLevel+\" index \"+context.mMoveIndex+\"/\"+context.mBoard.mMoves.length);\r\n\tif(context.mNextBoards) {\r\n\t\tcontext.mNextBoard = context.mNextBoards[context.mMoveIndex];\r\n\t} else {\r\n\t\tcontext.mNextBoard = context.mBoard.MakeAndApply(this,context.mMoveIndex);\r\n\t}\r\n\r\n\tif(this.mProgressCallback) {\r\n\t\tvar percent=null;\r\n\t\tif(context.mLevel==this.mTopLevel)\r\n\t\t\tpercent=Math.floor((context.mMoveIndex*100)/context.mBoard.mMoves.length);\r\n\t\telse if(context.mLevel==this.mTopLevel-1) {\r\n\t\t\tvar topContext=this.mContexts[0];\r\n\t\t\tvar topStep=1/topContext.mBoard.mMoves.length;\r\n\t\t\tpercent=Math.floor(100*(topContext.mMoveIndex*topStep+(context.mMoveIndex*topStep/context.mBoard.mMoves.length)));\r\n\t\t}\r\n\t\tif(percent!=null)\r\n\t\t\ttry {\r\n\t\t\t\tthis.mProgressCallback(percent);\r\n\t\t\t} catch(e) {}\r\n\t}\r\n\r\n\tvar nextBoard = context.mNextBoard;\r\n\tnextBoard.mFinished = false;\r\n\tnextBoard.mWinner = 0;\r\n\tnextBoard.Evaluate(this,context.mLevel==0,false,this);\r\n\r\n\tif(context.mLevel<0) // random mode\r\n\t\tnextBoard.mEvaluation=0;\r\n\r\n\t// JocLog(\"Eval2 \"+nextBoard.mFinished+\"/\"+nextBoard.mWinner+\"/\"+nextBoard.mEvaluation);\r\n\tif (nextBoard.mFinished) {\r\n\t\tswitch (nextBoard.mWinner) {\r\n\t\tcase JocGame.PLAYER_A:\r\n\t\t\tnextBoard.mEvaluation = JocGame.MAX_VALUE - (this.mTopLevel - context.mLevel);\r\n\t\t\tbreak;\r\n\t\tcase JocGame.PLAYER_B:\r\n\t\t\tnextBoard.mEvaluation = -JocGame.MAX_VALUE + (this.mTopLevel - context.mLevel);\r\n\t\t\tbreak;\r\n\t\tcase JocGame.DRAW:\r\n\t\t\tnextBoard.mEvaluation = 0;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t} else if(context.mLevel==this.mTopLevel && context.mBoard.mMoves.length==1) {\r\n\t\t// one possible move at top level: no need to recurse\r\n\t} else if (context.mLevel > 0) {\r\n\t\tvar potential=(context.mExploCtrl.exploTo-this.mExploredCount)/context.mBoard.mMoves.length;\r\n\t\t//JocLog(\"ExecuteStep\",potential,context.mLevel,context.mExploCtrl);\r\n\t\tif(potential>=1) {\r\n\t\t\tnextBoard.mWho = -nextBoard.mWho; // player changes\r\n\t\t\tthis.Engine(nextBoard, context.mLevel - 1, (context.mMoveIndex != 0),\r\n\t\t\t\t\tcontext.mBestEvaluation,potential); // recurse algo\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\tthis.ExecuteStep2();\r\n}\r\n\r\nJocGame.prototype.ExecuteStep2 = function() {\r\n\tvar context = this.mContexts[this.mContexts.length - 1];\r\n\t//JocLog(\"ExecuteStep2 level \"+context.mLevel+\" index \"+context.mMoveIndex+\" \"+JSON.stringify(context.mBoard.board));\r\n\tif(context.mBoard.mMoves.length>0) {\r\n\t\tif (context.mMoveIndex == 0) { // first evaluated move\r\n\t\t\tcontext.mBestEvaluation = context.mNextBoard.mEvaluation; // then it's the best one so far\r\n\t\t\tif (context.mLevel == this.mTopLevel) // if top level\r\n\t\t\t\tthis.SetBest(context.mBoard.mMoves[0], context.mBoard); // store move\r\n\t\t} else { // another move evaluated\r\n\t\t\tif (context.mNextBoard.mWho > 0) { // B plays\r\n\t\t\t\tif (context.mNextBoard.mEvaluation > context.mBestEvaluation) { // best move ?\r\n\t\t\t\t\tcontext.mBestEvaluation = context.mNextBoard.mEvaluation; // remember it\r\n\t\t\t\t\tif (context.mLevel == this.mTopLevel) // if top level\r\n\t\t\t\t\t\tthis.SetBest(context.mBoard.mMoves[context.mMoveIndex],\r\n\t\t\t\t\t\t\t\tcontext.mBoard); // then store\r\n\t\t\t\t} else if (context.mLevel == this.mTopLevel\r\n\t\t\t\t\t\t&& context.mNextBoard.mEvaluation == context.mBestEvaluation) { // top level and\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// another best\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// move\r\n\t\t\t\t\tthis.AddBest(context.mBoard.mMoves[context.mMoveIndex],\r\n\t\t\t\t\t\t\tcontext.mBoard); // add to best moves\r\n\t\t\t\t}\r\n\t\t\t} else { // A plays\r\n\t\t\t\tif (context.mNextBoard.mEvaluation < context.mBestEvaluation) { // best move\r\n\t\t\t\t\tcontext.mBestEvaluation = context.mNextBoard.mEvaluation; // keep it\r\n\t\t\t\t\tif (context.mLevel == this.mTopLevel)\r\n\t\t\t\t\t\tthis.SetBest(context.mBoard.mMoves[context.mMoveIndex],\r\n\t\t\t\t\t\t\t\tcontext.mBoard);\r\n\t\t\t\t} else if (context.mLevel == this.mTopLevel\r\n\t\t\t\t\t\t&& context.mNextBoard.mEvaluation == context.mBestEvaluation)\r\n\t\t\t\t\tthis.AddBest(context.mBoard.mMoves[context.mMoveIndex],\r\n\t\t\t\t\t\t\tcontext.mBoard);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcontext.mBoard.mEvaluation = context.mBestEvaluation; // assign best eval\r\n\tif (context.mBAlpha) { // alpha-beta pruning\r\n\t\tif ((context.mBoard.mWho == JocGame.PLAYER_A && context.mBestEvaluation > context.mAlpha)\r\n\t\t\t\t|| (context.mBoard.mWho == JocGame.PLAYER_B && context.mBestEvaluation < context.mAlpha)) {\r\n\t\t\tcontext.mMoveIndex = context.mBoard.mMoves.length - 1;\r\n\t\t\t//JocLog(\"Alpha-beta pruned level\");\r\n\t\t\t// ensure no more looking for other moves at this level\r\n\t\t}\r\n\t}\r\n\r\n\tcontext.mMoveIndex++;\r\n\tif (context.mMoveIndex < context.mBoard.mMoves.length) {\r\n\t\tthis.ScheduleStep();\r\n\t} else {\r\n\t\t//JocLog(\"BestEval level \"+context.mLevel+\": \"+context.mBestEvaluation+\" \"+context.mMoveIndex+\"/\"+context.mBoard.mMoves.length);\r\n\t\tthis.mContexts.pop();\r\n\t\tif (this.mContexts.length > 0) {\r\n\t\t\tvar context = this.mContexts[this.mContexts.length - 1];\r\n\t\t\tcontext.mNextBoard.mWho = -context.mNextBoard.mWho;\r\n\t\t\tthis.ExecuteStep2();\r\n\t\t} else {\r\n\t\t\tdelete context.mBoard.mMoves;\r\n\t\t\t//JocLog(\"Best eval \"+context.mBestEvaluation);\r\n\t\t\tthis.Done();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nJocGame.prototype.SetBest = function(aMove, aBoard) {\r\n\tvar move = new (this.GetMoveClass())({});\r\n\tmove.CopyFrom(aMove);\r\n\tthis.mBestMoves = [ move ];\r\n}\r\n\r\nJocGame.prototype.AddBest = function(aMove, aBoard) {\r\n\tvar move = new (this.GetMoveClass())({});\r\n\tmove.CopyFrom(aMove);\r\n\tthis.mBestMoves.push(move);\r\n}\r\n\r\nJocGame.prototype.GetRepeatOccurence = function(board) {\r\n\tif(!this.mOptions.preventRepeat)\r\n\t\treturn -1;\r\n\tvar repOcc=this.mVisitedBoards[board.GetSignature()];\r\n\treturn repOcc;\r\n}\r\n\r\nJocGame.prototype.HandleRepeat = function(board) {\r\n\tif(this.mOptions.preventRepeat) {\r\n\t\tvar sign=board.GetSignature(true);\r\n\t\tif(this.mVisitedBoards[sign]===undefined)\r\n\t\t\tthis.mVisitedBoards[sign]=1;\r\n\t\telse\r\n\t\t\tthis.mVisitedBoards[sign]++;\r\n\t}\r\n}\r\n\r\nJocGame.prototype.UnhandleRepeat = function(board) {\r\n\tif(this.mOptions.preventRepeat) {\r\n\t\tvar sign=board.GetSignature(true);\r\n\t\tif(this.mVisitedBoards[sign]==1)\r\n\t\t\tdelete this.mVisitedBoards[sign];\r\n\t\telse if(this.mVisitedBoards[sign]>1)\r\n\t\t\tthis.mVisitedBoards[sign]--;\r\n\t}\r\n}\r\n\r\nJocGame.prototype.ApplyMove = function(aMove) {\r\n\tvar move = new (this.GetMoveClass())({});\r\n\tmove.CopyFrom(aMove);\r\n\tthis.mPlayedMoves.push(move);\r\n\tif(this.mFullPlayedMoves.length<this.mPlayedMoves.length)\r\n\t\tthis.mFullPlayedMoves.push(move);\r\n\telse if(!move.Equals(this.mFullPlayedMoves[this.mPlayedMoves.length-1])) {\r\n\t\tthis.mFullPlayedMoves=this.mFullPlayedMoves.slice(0,this.mPlayedMoves.length-1);\r\n\t\tthis.mFullPlayedMoves.push(move);\r\n\t}\r\n\tthis.mBoard.ApplyMove(this,aMove);\r\n\tthis.mBoard.mMoves=[];\r\n\tthis.HandleRepeat(this.mBoard);\r\n}\r\n\r\nJocGame.prototype.BackTo = function(aIndex,moves) {\r\n\tif(!moves)\r\n\t\tmoves=this.mFullPlayedMoves;\r\n\tthis.mWho = JocGame.PLAYER_A;\r\n\tthis.mBoard = new (this.GetBoardClass())(this);\r\n\tif(this.mBoard.InitialPosition)\r\n\t\tthis.mBoard.InitialPosition(this);\r\n\tif(this.mInitial && this.mInitial.turn)\r\n\t\tthis.mWho = this.mInitial.turn;\r\n\tthis.mBoard.mMoves=[];\r\n\tthis.mBoard.mWho = this.mWho;\r\n\tthis.mBestMoves = [];\r\n\tthis.mVisitedBoards={};\r\n\tthis.mPlayedMoves = [];\r\n\tfor(var i=0;i<aIndex;i++) {\r\n\t\tthis.mBoard.ApplyMove(this,moves[i]);\r\n\t\tthis.HandleRepeat(this.mBoard);\r\n\t\tthis.mBoard.mWho=-this.mBoard.mWho;\r\n\t\tthis.mPlayedMoves.push(moves[i]);\r\n\t}\r\n\tthis.mWho=this.mBoard.mWho;\r\n}\r\n\r\nJocGame.prototype.ExportInitialBoardState = function(format) {\r\n\tif(!this.mInitialString)\r\n\t\treturn null;\r\n\tif(typeof this.Import!=\"function\")\r\n\t\treturn null;\r\n\ttry {\r\n\t\tvar importResult=this.Import(\"pjn\",this.mInitialString);\r\n\t\tif(!importResult.status)\r\n\t\t\treturn null;\r\n\t\tvar board = new (this.GetBoardClass())(this);\r\n\t\tif(board.InitialPosition)\r\n\t\t\tboard.InitialPosition(this);\r\n\t\tvar boardState = board.ExportBoardState(this,format);\r\n\t\treturn {\r\n\t\t\tboardState: boardState,\r\n\t\t\tturn: board.mWho\r\n\t\t}\r\n\t} catch(e) {\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nJocGame.prototype.Load = function(gameData) {\r\n\tthis.mWho = JocGame.PLAYER_A;\r\n\tthis.mBoard = new (this.GetBoardClass())(this);\r\n\tthis.mBoard.mMoves=[];\r\n\r\n\tif(gameData.initialBoard) {\r\n\t\tif(typeof this.Import!=\"function\")\r\n\t\t\tthrow new Error(\"Import not supported\");\r\n\t\tvar importResult=this.Import(\"pjn\",gameData.initialBoard);\r\n\t\tif(!importResult.status) {\r\n\t\t\tvar error = new Error(\"import failed\");\r\n\t\t\tswitch(importResult.error) {\r\n\t\t\t\tcase 'parse': error=new Error(\"import failed: parse error\"); break;\r\n\t\t\t\tcase 'unsupported': error=new Error(\"import failed: unsupported format\"); break;\r\n\t\t\t}\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t\tthis.mInitial=importResult.initial;\r\n\t\tif(this.mInitial.turn)\r\n\t\t\tthis.mWho = this.mInitial.turn;\r\n\t\tthis.mInitialString=gameData.initialBoard;\r\n\t}\r\n\tif(this.mBoard.InitialPosition)\r\n\t\tthis.mBoard.InitialPosition(this);\r\n\tthis.mBoard.mWho = this.mWho;\r\n\r\n\tthis.mBestMoves = [];\r\n\tthis.mVisitedBoards={};\r\n\tvar moves=gameData.playedMoves;\r\n\tthis.mPlayedMoves = [];\r\n\tthis.mFullPlayedMoves = [];\r\n\tfor(var i in moves) {\r\n\t\tvar move=new (this.GetMoveClass())(moves[i]);\r\n\t\tif(!this.IsValidMove(move))\r\n\t\t\tthrow \"invalid-move\";\r\n\t\tthis.mBoard.ApplyMove(this,move);\r\n\t\tthis.HandleRepeat(this.mBoard);\r\n\t\tthis.mBoard.mWho=-this.mBoard.mWho;\r\n\t\tthis.mPlayedMoves.push(move);\r\n\t\tthis.mFullPlayedMoves.push(move);\r\n\t\tthis.mBoard.mMoves=[];\r\n\t}\r\n\tthis.mWho=this.mBoard.mWho;\r\n\tif(this.mBoard.mFinished==false)\r\n\t\tthis.mBoard.Evaluate(this,true,true);\r\n}\r\n\r\nJocGame.prototype.CloseView = function() {\r\n}\r\n\r\nJocMove.prototype = {}\r\n\r\nJocMove.prototype.CopyFrom = function(aMove) {\r\n\tvar fields=JSON.parse(JSON.stringify(aMove));\r\n\tfor(var f in fields) {\r\n\t\tthis[f]=fields[f];\r\n\t}\r\n}\r\n\r\nJocMove.prototype.Equals = function(move) {\r\n\treturn JSON.stringify(this)==JSON.stringify(move);\r\n}\r\n\r\nJocMove.prototype.ToString = function() {\r\n\treturn JSON.stringify(this);\r\n}\r\n\r\nJocMove.prototype.Strip = function() {\r\n\treturn this;\r\n}\r\n\r\nJocBoard.prototype = {}\r\n\r\nJocBoard.prototype.Init = function(aGame) {\r\n}\r\n\r\nJocBoard.prototype.InitBoard = function(aGame) {\r\n\tthis.mDepth = 0; // no depth calc\r\n\tthis.mMoves = []; // move storage\r\n\tthis.mEvaluation = 0; // not evaluated yet\r\n\tthis.mFinished = false;\r\n\tthis.mWinner = 0;\r\n\tthis.Init(aGame);\r\n}\r\n\r\nJocBoard.prototype.CopyFrom = function(aBoard) {\r\n\tvar signature=aBoard.mSignature;\r\n\tdelete(aBoard.mSignature);\r\n\tvar fields=JSON.parse(JSON.stringify(aBoard));\r\n\tfor(var f in fields) {\r\n\t\tthis[f]=fields[f];\r\n\t}\r\n\taBoard.mSignature=signature;\r\n}\r\n\r\nJocBoard.prototype.GetSignature = function() {\r\n\tif(arguments[0] || !this.mSignature) {\r\n\t\tvar moves=this.mMoves;\r\n\t\tdelete(this.mMoves);\r\n\t\tdelete(this.mSignature);\r\n\t\tthis.mSignature=JocUtil.md5(JSON.stringify(this));\r\n\t\t//JocLog(\"signature\",this.mSignature,this);\r\n\t\tthis.mMoves=moves;\r\n\t}\r\n\treturn this.mSignature;\r\n}\r\n\r\nJocBoard.prototype.ApplyMove = function(aGame,aMove) {\r\n\tJocLog(\"Method JocBoard:ApplyMove() must be overloaded\");\r\n\t// must be overloaded\r\n}\r\n\r\nJocBoard.prototype.GenerateMoves = function(aGame) {\r\n\tJocLog(\"Method JocBoard:GenerateMoves() must be overloaded\");\r\n\t// must be overloaded\r\n}\r\n\r\nJocBoard.prototype.Evaluate = function(aGame,aFinishOnly,aTopLevel) {\r\n\tJocLog(\"Method JocBoard:Evaluate() must be overloaded\");\r\n\tthis.mEvaluation = 0; // must be overloaded\r\n}\r\n\r\nJocBoard.prototype.HumanTurn = function() {\r\n}\r\n\r\nJocBoard.prototype.HumanTurnEnd = function() {\r\n}\r\n\r\nJocBoard.prototype.PlayedMove = function() {\r\n}\r\n\r\nJocBoard.prototype.ShowEnd = function() {\r\n}\r\n\r\nJocBoard.prototype.MakeAndApply = function(aGame,aIndex) {\r\n\tvar board = new (aGame.GetBoardClass())(aGame);\r\n\tboard.CopyFrom(this);\r\n\tboard.mWho = this.mWho;\r\n\tboard.mBoardClass = this.mBoardClass;\r\n\tboard.ApplyMove(aGame,this.mMoves[aIndex]); // apply move\r\n\tboard.mMoves=[];\r\n\treturn board;\r\n}\r\n\r\nJocBoard.prototype.IsValidMove = function(aGame,move) {\r\n\tif(typeof move.Equals != \"function\")\r\n\t\tmove=aGame.CreateMove(move);\r\n\tif(!this.mMoves || this.mMoves.length==0) {\r\n\t\tthis.mCurrentLevel=-1;\r\n\t\tthis.GenerateMoves(aGame);\r\n\t}\r\n\tfor(var i in this.mMoves) {\r\n\t\tif(move.Equals(this.mMoves[i]))\r\n\t\t\treturn true;\r\n\t}\r\n\tconsole.error(\"Invalid move \"+JSON.stringify(move)+\" in \"+JSON.stringify(this.mMoves));\r\n\treturn false;\r\n}\r\n\r\nJocBoard.prototype.PushMove = function(aGame,args) {\r\n\tthis.mMoves.push(aGame.CreateMove(args));\r\n}\r\n\r\n\r\nJocBoard.prototype.GenerateMoveObjects = function(aGame) {\r\n\tvar moves=[];\r\n\tthis.mMoves=[];\r\n\tthis.GenerateMoves(aGame);\r\n\tfor(var i=0;i<this.mMoves.length;i++)\r\n\t\tmoves.push(aGame.CreateMove(this.mMoves[i]));\r\n\tthis.mMoves=moves;\r\n}\r\n\r\nJocBoard.prototype.ExportBoardState = function(aGame) {\r\n\treturn JSON.stringify(this);\r\n}\r\n\r\nJocGame.prototype.GetBestMatchingMove = function(moveStr,candidateMoves) {\r\n\tvar prettyMoves=[];\r\n\tvar $this=this;\r\n\tcandidateMoves.forEach(function(m) {\r\n\t\tif(typeof m.ToString==\"function\")\r\n\t\t\tprettyMoves.push(m.ToString());\r\n\t\telse\r\n\t\t\tprettyMoves.push($this.CreateMove(m).ToString());\r\n\t});\r\n\tvar bestDist=Infinity;\r\n\tvar bestMatches=[];\r\n\tcandidateMoves.forEach(function(candidate,index) {\r\n\t\tvar dist=JocGame.Levenshtein(moveStr,prettyMoves[index])/(Math.max(prettyMoves[index].length,moveStr.length)+1);\r\n\t\tif(dist==bestDist)\r\n\t\t\tbestMatches.push(index);\r\n\t\telse if(dist<bestDist) {\r\n\t\t\tbestMatches=[index];\r\n\t\t\tbestDist=dist;\r\n\t\t}\r\n\t});\r\n\tif(bestMatches.length==1)\r\n\t\treturn candidateMoves[bestMatches[0]];\r\n\r\n\tvar candidateIndexes=bestMatches;\r\n\tvar matches=[];\r\n\tcandidateIndexes.forEach(function(index) {\r\n\t\tvar pretty=prettyMoves[index];\r\n\t\tif(moveStr.indexOf(pretty)>=0 || pretty.indexOf(moveStr)>=0)\r\n\t\t\tmatches.push(index);\r\n\t});\r\n\tif(matches.length==1)\r\n\t\treturn candidateMoves[matches[0]];\r\n\r\n\tbestDist=Infinity;\r\n\tbestMatches=[];\r\n\tcandidateIndexes.forEach(function(index) {\r\n\t\tvar dist=0;\r\n\t\tvar str1=moveStr.replace(/[A-Z]/g,'');\r\n\t\tvar str2=prettyMoves[index].replace(/[A-Z]/g,'');\r\n\t\tdist+=JocGame.Levenshtein(str1,str2)/(Math.max(str1.length,str2.length)+1);\r\n\t\tdist+=(str1.indexOf(str2)>=0 || str2.indexOf(str1)>=0)?0:1;\r\n\t\tstr1=moveStr.replace(/[a-z]/g,'');\r\n\t\tstr2=prettyMoves[index].replace(/[a-z]/g,'');\r\n\t\tdist+=JocGame.Levenshtein(str1,str2)/(Math.max(str1.length,str2.length)+1);\r\n\t\tdist+=(str1.indexOf(str2)>=0 || str2.indexOf(str1)>=0)?0:1;\r\n\t\tif(dist==bestDist)\r\n\t\t\tbestMatches.push(index);\r\n\t\telse if(dist<bestDist) {\r\n\t\t\tbestMatches=[index];\r\n\t\t\tbestDist=dist;\r\n\t\t}\r\n\t});\r\n\tif(bestMatches.length==1)\r\n\t\treturn candidateMoves[bestMatches[0]];\r\n\treturn null;\r\n}\r\n\r\nJocBoard.prototype.PickMoveFromDatabase = function(aGame,database) {\r\n\tif(!this.mMoves || this.mMoves.length==0) {\r\n\t\tvar moves=[];\r\n\t\tthis.mMoves=[];\r\n\t\tthis.GenerateMoves(aGame);\r\n\t\tfor(var i=0;i<this.mMoves.length;i++)\r\n\t\t\tmoves.push(aGame.CreateMove(this.mMoves[i]));\r\n\t\tthis.mMoves=moves;\r\n\t}\r\n\tif(this.mMoves.length==0)\r\n\t\treturn null;\r\n\tvar key=\"\"+this.mWho+\"#\"+this.GetSignature();\r\n\tvar dbMoves=database[key];\r\n\tif(!dbMoves)\r\n\t\treturn null;\r\n\tvar totalEval=0;\r\n\tfor(var i=0;i<dbMoves.length;i++)\r\n\t\ttotalEval+=dbMoves[i].e;\r\n\tvar rnd=Math.random()*totalEval;\r\n\tvar current=0;\r\n\tfor(var i=0;i<dbMoves.length;i++) {\r\n\t\tvar dbMove=dbMoves[i];\r\n\t\tcurrent+=dbMove.e;\r\n\t\tif(current>rnd) {\r\n\t\t\tvar pickedMove=aGame.GetBestMatchingMove(dbMove.m,this.mMoves);\r\n\t\t\tif(pickedMove)\r\n\t\t\t\treturn [pickedMove];\r\n\t\t}\r\n\t}\r\n\treturn null; // never reached\r\n}\r\n\r\nJocBoard.prototype.CompactMoveString = function(aGame,aMove) {\r\n\tif(typeof aMove.ToString!=\"function\")\r\n\t\taMove=aGame.CreateMove(aMove);\r\n\treturn aMove.ToString();\r\n}\r\n\r\n/*-- Zobrist implementation --*/\r\n\r\nJocGame.Zobrist=function(params) {\r\n\tvar mt=new MersenneTwister(12345);\r\n\tvar paramNames=[];\r\n\tfor(var f in params)\r\n\t\tparamNames.push(f);\r\n\tparamNames.sort(); // ensures we walk through parameters always in same order so generated pseudo random seeds are always the same\r\n\tthis.seed={};\r\n\tfor(var pi=0;pi<paramNames.length;pi++) {\r\n\t\tvar f=paramNames[pi];\r\n\t\tvar param=params[f];\r\n\t\tvar seed={\r\n\t\t\tvalues: {},\r\n\t\t\tseeds:[],\r\n\t\t}\r\n\t\tvar vIndex=0;\r\n\t\tfor(var vi=0;vi<param.values.length;vi++)\r\n\t\t\tseed.values[param.values[vi]]=vIndex++;\r\n\t\tswitch(param.type) {\r\n\t\tcase \"array\":\r\n\t\t\tfor(var j=0;j<param.size;j++) {\r\n\t\t\t\tvar seeds0=[];\r\n\t\t\t\tfor(var i=0;i<vIndex;i++)\r\n\t\t\t\t\tseeds0.push(mt.genrand_int32());\r\n\t\t\t\tseed.seeds.push(seeds0);\r\n\t\t\t}\r\n\t\t\tseed.type=\"array\";\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tfor(var i=0;i<vIndex;i++)\r\n\t\t\t\tseed.seeds.push(mt.genrand_int32());\r\n\t\t\tseed.type=\"simple\";\r\n\t\t}\r\n\t\tthis.seed[f]=seed;\r\n\t}\r\n\t//console.log(\"Created zobrist\",this);\r\n}\r\n\r\nJocGame.Zobrist.prototype={\r\n\tupdate: function(zobrist,name) {\r\n\t\t//var zobrist0=zobrist;\r\n\t\tvar seed=this.seed[name];\r\n\t\tif(seed===undefined) {\r\n\t\t\tconsole.error(\"Unknown Zobrist parameter\",name);\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tvar vIndex=seed.values[arguments[2]];\r\n\t\tif(vIndex===undefined) {\r\n\t\t\tconsole.error(\"Undeclared Zobrist value\",arguments[2],\"as param\",name);\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tswitch(seed.type) {\r\n\t\tcase \"simple\":\r\n\t\t\tzobrist^=seed.seeds[vIndex];\r\n\t\t\tbreak;\r\n\t\tcase \"array\":\r\n\t\t\tvar seeds=seed.seeds[arguments[3]];\r\n\t\t\tif(seeds===undefined) {\r\n\t\t\t\tconsole.error(\"Undeclared Zobrist array index\",arguments[3],\"as param\",name);\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tzobrist^=seeds[vIndex];\r\n\t\t\t//console.log(\"Zobrist\",zobrist0,\"=>\",name,\"array[\",arguments[2],\"] =\",arguments[3],\"=>\",zobrist);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\treturn zobrist;\r\n\t},\r\n}\r\n\r\n/*--- Levenshtein distance implementation ---*/\r\nJocGame.Levenshtein=function(e,f){if(e==f)return 0;var d=e.length,j=f.length;if(0===d)return j;if(0===j)return d;var b=!1;try{b=!\"0\"[0]}catch(m){b=!0}\r\nb&&(e=e.split(\"\"),f=f.split(\"\"));for(var b=Array(d+1),g=Array(d+1),a=0,h=0,i=0,a=0;a<d+1;a++)b[a]=a;for(var c=\"\",k=\"\",h=1;h<=j;h++){g[0]=h;k=f[h-1];\r\nfor(a=0;a<d;a++){var c=e[a],i=c==k?0:1,c=b[a+1]+1,l=g[a]+1,i=b[a]+i;l<c&&(c=l);i<c&&(c=i);g[a+1]=c}a=b;b=g;g=a}return b[d]};\r\n\r\n"]}